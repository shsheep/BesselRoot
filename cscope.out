cscope 15 $HOME/NA/hw2 -q 0000000949 0000059947
	@bessj0.c

1 
	~<m©h.h
>

3 
	$bessj0
(
x
)

5 
ax
,
z
;

6 
xx
,
y
,
™s
,
™s1
,
™s2
;

8 i‡((
ax
=
	`Ábs
(
x
)) < 8.0) {

9 
y
=
x
*x;

10 
™s1
=57568490574.0+
y
*(-13362590354.0+y*(651619640.7

11 +
y
*(-11214424.18+y*(77392.33017+y*(-184.9052456)))));

12 
™s2
=57568490411.0+
y
*(1029532985.0+y*(9494680.718

13 +
y
*(59272.64853+y*(267.8532712+y*1.0))));

14 
™s
=
™s1
/
™s2
;

16 
z
=8.0/
ax
;

17 
y
=
z
*z;

18 
xx
=
ax
-0.785398164;

19 
™s1
=1.0+
y
*(-0.1098628627e-2+y*(0.2734510407e-4

20 +
y
*(-0.2073370639e-5+y*0.2093887211e-6)));

21 
™s2
 = -0.1562499995e-1+
y
*(0.1430488765e-3

22 +
y
*(-0.6911147651e-5+y*(0.7621095161e-6

23 -
y
*0.934945152e-7)));

24 
™s
=
	`sqπ
(0.636619772/
ax
)*(
	`cos
(
xx
)*
™s1
-
z
*
	`sö
(xx)*
™s2
);

26  
™s
;

27 
	}
}

	@bessj1.c

2 
	~<m©h.h
>

4 
	$bessj1
(
x
)

6 
ax
,
z
;

7 
xx
,
y
,
™s
,
™s1
,
™s2
;

9 i‡((
ax
=
	`Ábs
(
x
)) < 8.0) {

10 
y
=
x
*x;

11 
™s1
=
x
*(72362614232.0+
y
*(-7895059235.0+y*(242396853.1

12 +
y
*(-2972611.439+y*(15704.48260+y*(-30.16036606))))));

13 
™s2
=144725228442.0+
y
*(2300535178.0+y*(18583304.74

14 +
y
*(99447.43394+y*(376.9991397+y*1.0))));

15 
™s
=
™s1
/
™s2
;

17 
z
=8.0/
ax
;

18 
y
=
z
*z;

19 
xx
=
ax
-2.356194491;

20 
™s1
=1.0+
y
*(0.183105e-2+y*(-0.3516396496e-4

21 +
y
*(0.2457520174e-5+y*(-0.240337019e-6))));

22 
™s2
=0.04687499995+
y
*(-0.2002690873e-3

23 +
y
*(0.8449199096e-5+y*(-0.88228987e-6

24 +
y
*0.105787412e-6)));

25 
™s
=
	`sqπ
(0.636619772/
ax
)*(
	`cos
(
xx
)*
™s1
-
z
*
	`sö
(xx)*
™s2
);

26 i‡(
x
 < 0.0Ë
™s
 = -ans;

28  
™s
;

29 
	}
}

	@hw3.c

4 
	~<°dio.h
>

5 
	#NRANSI


	)

6 
	~"ƒ.h
"

7 
	~"ƒutû.h
"

9 
	#N
 10000

10 
	#NBMAX
 20

11 
	#X1
 1.0

12 
	#X2
 10.0

	)

13 
	#EULER
 2.71828

	)

14 
	#PI
 3.14159

	)

16 
	$fx
(
x
)

18  
	`bessj0
(
x
);

19 
	}
}

21 
	$funcd
(
x
,*
‚
, *
df
)

23 *
‚
=
	`bessj0
(
x
);

24 *
df
 = -
	`bessj1
(
x
);

25 
	}
}

27 
	$eq_1
(
x
)

29  10*
	`pow
(
EULER
, -
x
)*
	`sö
(2*
PI
*x)-2;

30 
	}
}

32 
	$eq_1d
(
x
, *
‚
, *
df
)

34 *
‚
 = 10*
	`pow
(
EULER
, -
x
)*
	`sö
(2*
PI
*x)-2;

35 *
df
 = 10*
	`pow
(
EULER
, -
x
)*(2*
PI
*
	`cos
(2*PI*x)-
	`sö
(2*PI*x));

36 
	}
}

38 
	$eq_2
(
x
)

40  
x
*x-2*x*
	`pow
(
EULER
, -x)+pow(EULER, -2*x);

41 
	}
}

43 
	$eq_2d
(
x
, *
‚
, *
df
)

45 *
‚
 = 
x
*x-2*x*
	`pow
(
EULER
, -x)+pow(EULER, -2*x);

46 *
df
 = 2*(1+
	`pow
(
EULER
, -
x
))*(x-pow(EULER, -x));

47 
	}
}

49 
	$eq_3
(
x
)

51  
	`cos
(
x
+
	`sqπ
(2))+x*(x/2+sqrt(2));

52 
	}
}

54 
	$eq_3d
(
x
, *
‚
, *
df
)

56 *
‚
 = 
	`cos
(
x
+
	`sqπ
(2))+x*(x/2+sqrt(2));

57 *
df
 = -
	`sö
(
x
+
	`sqπ
(2))+x+sqrt(2);

58 
	}
}

66 
	$maö
() {

67 
i
, 
nb
=
NBMAX
;

68 
xacc
, 
roŸ
, *
xb1
, *
xb2
;

72 
xb1
=
	`ve˘‹
(1,
NBMAX
);

73 
xb2
=
	`ve˘‹
(1,
NBMAX
);

76 
	`zbøk
(
fx
,
X1
,
X2
,
N
,
xb1
,
xb2
,&
nb
);

78 
	`¥ötf
("FindingÑoots of Bessel function J0\n");

79 
	`¥ötf
("vüÑ™gêo‡[%f, %f] wôh %d i¡îvÆs", 
X1
, 
X2
, 
N
);

81 
	`¥ötf
("\nBisection method\n%21s %15s\n","x","f(x)");

82 
i
=1;i<=
nb
;i++) {

83 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

84 
roŸ
=
	`πbis
(
fx
,
xb1
[
i
],
xb2
[i],
xacc
);

85 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

88 
	`¥ötf
("\nLinear interpolation method\n%21s %15s\n","x","f(x)");

89 
i
=1;i<=
nb
;i++) {

90 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

91 
roŸ
=
	`πÊ•
(
fx
,
xb1
[
i
],
xb2
[i],
xacc
);

92 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

95 
	`¥ötf
("\nSecant method\n%21s %15s\n","x","f(x)");

96 
i
=1;i<=
nb
;i++) {

97 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

98 
roŸ
=
	`π£c
(
fx
,
xb1
[
i
],
xb2
[i],
xacc
);

99 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

102 
	`¥ötf
("\nNR with bracketing method\n%21s %15s\n","x","f(x)");

103 
i
=1;i<=
nb
;i++) {

104 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

105 
roŸ
=
	`πß„
(
funcd
,
xb1
[
i
],
xb2
[i],
xacc
);

106 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

109 
	`¥ötf
("\nNewton-Raphson method\n%21s %15s\n","x","f(x)");

110 
i
=1;i<=
nb
;i++) {

111 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

112 
roŸ
=
	`π√wt
(
funcd
,
xb1
[
i
],
xb2
[i],
xacc
);

113 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

117 
	`¥ötf
("\nMuller method\n%21s %15s\n","x","f(x)");

118 
i
=1;i<=
nb
;i++) {

119 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

120 
roŸ
=
	`πmuŒî
(
fx
,
xb1
[
i
],
xb2
[i],
xacc
);

121 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

125 
	`zbøk
(
eq_1
,0.1,1.0,
N
,
xb1
,
xb2
,&
nb
);

126 
	`¥ötf
("\nNR with bracketing method 10*pow(EULER, -x)*sin(2*PI*x)-2\n%21s %15s\n","x","f(x)");

127 
i
=1;i<=
nb
;i++) {

128 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

129 
roŸ
=
	`πß„
(
eq_1d
,
xb1
[
i
],
xb2
[i],
xacc
);

130 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

133 
	`zbøk
(
eq_2
,0.0,1.0,
N
,
xb1
,
xb2
,&
nb
);

134 
	`¥ötf
("\nNR with bracketing method x*x-2*x*pow(EULER, -x)+pow(EULER, -2*x)\n%21s %15s\n","x","f(x)");

135 
i
=1;i<=
nb
;i++) {

136 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

137 
roŸ
=
	`πß„
(
eq_2d
,
xb1
[
i
],
xb2
[i],
xacc
);

138 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

141 
	`zbøk
(
eq_3
,-2.0,-1.0,
N
,
xb1
,
xb2
,&
nb
);

142 
	`¥ötf
("\nNR with bracketing method cos(x+sqrt(2))+x*(x/2+sqrt(2))\n%21s %15s\n","x","f(x)");

143 
i
=1;i<=
nb
;i++) {

144 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

145 
roŸ
=
	`πß„
(
eq_3d
,
xb1
[
i
],
xb2
[i],
xacc
);

146 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

157 
	`‰ì_ve˘‹
(
xb2
,1,
NBMAX
);

158 
	`‰ì_ve˘‹
(
xb1
,1,
NBMAX
);

159 
	}
}

	@nr.h

1 #i‚de‡
_NR_H_


2 
	#_NR_H_


	)

4 #i‚de‡
_FCOMPLEX_DECLARE_T_


5 
	sFCOMPLEX
 {
	mr
,
	mi
;} 
	tfcom∂ex
;

6 
	#_FCOMPLEX_DECLARE_T_


	)

9 #i‚de‡
_ARITHCODE_DECLARE_T_


11 *
	mûob
,*
	miupb
,*
	mncumfq
,
	mjdif
,
	mnc
,
	mmööt
,
	mnch
,
	mncum
,
	mƒad
;

12 } 
	t¨ôhcode
;

13 
	#_ARITHCODE_DECLARE_T_


	)

16 #i‚de‡
_HUFFCODE_DECLARE_T_


18 *
	micod
,*
	mncod
,*
	mÀ·
,*
	mright
,
	mnch
,
	mnodemax
;

19 } 
	thuffcode
;

20 
	#_HUFFCODE_DECLARE_T_


	)

23 
	~<°dio.h
>

25 #i‡
deföed
(
__STDC__
Ë|| deföed(
ANSI
Ë|| deföed(
NRANSI
)

27 
addöt
(**
uf
, **
uc
, **
ªs
, 
nf
);

28 
aúy
(
x
, *
ai
, *
bi
, *
aù
, *
bù
);

29 
amebß
(**
p
, 
y
[], 
ndim
, 
pb
[], *
yb
,

30 
·ﬁ
, (*
funk
)([]), *
ôî
, 
ãm±r
);

31 
	`am€ba
(**
p
, 
y
[], 
ndim
, 
·ﬁ
,

32 (*
funk
)([]), *
ôî
);

33 
	`amŸry
(**
p
, 
y
[], 
psum
[], 
ndim
,

34 (*
funk
)([]), 
ihi
, 
Ác
);

35 
	`amŸß
(**
p
, 
y
[], 
psum
[], 
ndim
, 
pb
[],

36 *
yb
, (*
funk
)([]), 
ihi
, *
yhi
, 
Ác
);

37 
	`™√Æ
(
x
[], 
y
[], 
i‹dî
[], 
ncôy
);

38 
	`™‹m2
(**
a
, 
n
);

39 
	`¨cmak
(
n‰eq
[], 
nchh
, 
ƒadd
,

40 
¨ôhcode
 *
acode
);

41 
	`¨code
(*
ich
, **
codï
, *
lcode
,

42 *
lcd
, 
isign
, 
¨ôhcode
 *
acode
);

43 
	`¨csum
(
iö
[], 
iout
[], 
ja
,

44 
nwk
, 
ƒad
, 
nc
);

45 
	`asﬁve
(
n
, 
b
[], 
x
[], 
ô∫•
);

46 
	`©imes
(
n
, 
x
[], 
r
[], 
ô∫•
);

47 
	`avev¨
(
d©a
[], 
n
, *
ave
, *
v¨
);

48 
	`bÆ™c
(**
a
, 
n
);

49 
	`b™bks
(**
a
, 
n
, 
m1
, 
m2
, **
Æ
,

50 
ödx
[], 
b
[]);

51 
	`b™dec
(**
a
, 
n
, 
m1
, 
m2
, **
Æ
,

52 
ödx
[], *
d
);

53 
	`b™mul
(**
a
, 
n
, 
m1
, 
m2
, 
x
[], 
b
[]);

54 
	`bcucof
(
y
[], 
y1
[], 
y2
[], 
y12
[], 
d1
,

55 
d2
, **
c
);

56 
	`bcuöt
(
y
[], 
y1
[], 
y2
[], 
y12
[],

57 
x1l
, 
x1u
, 
x2l
, 
x2u
, 
x1
,

58 
x2
, *
™sy
, *
™sy1
, *
™sy2
);

59 
	`beschb
(
x
, *
gam1
, *
gam2
, *
gam∂
,

60 *
gammi
);

61 
	`bessi
(
n
, 
x
);

62 
	`bessi0
(
x
);

63 
	`bessi1
(
x
);

64 
	`bessik
(
x
, 
xnu
, *
ri
, *
rk
, *
rù
,

65 *
rkp
);

66 
	`bessj
(
n
, 
x
);

67 
	`bessj0
(
x
);

68 
	`bessj1
(
x
);

69 
	`bessjy
(
x
, 
xnu
, *
rj
, *
ry
, *
rjp
,

70 *
ryp
);

71 
	`bessk
(
n
, 
x
);

72 
	`bessk0
(
x
);

73 
	`bessk1
(
x
);

74 
	`bessy
(
n
, 
x
);

75 
	`bessy0
(
x
);

76 
	`bessy1
(
x
);

77 
	`bëa
(
z
, 
w
);

78 
	`bëacf
(
a
, 
b
, 
x
);

79 
	`bëai
(
a
, 
b
, 
x
);

80 
	`bico
(
n
, 
k
);

81 
	`bksub
(
√
, 
nb
, 
jf
, 
k1
, 
k2
, ***
c
);

82 
	`b∆dev
(
µ
, 
n
, *
idum
);

83 
	`bª¡
(
ax
, 
bx
, 
cx
,

84 (*
f
)(), 
tﬁ
, *
xmö
);

85 
	`broydn
(
x
[], 
n
, *
check
,

86 (*
vecfunc
)(, [], []));

87 
	`bs°ï
(
y
[], 
dydx
[], 
nv
, *
xx
, 
håy
,

88 
ïs
, 
ysˇl
[], *
hdid
, *
h√xt
,

89 (*
dîivs
)(, [], []));

90 
	`ˇld©
(
julün
, *
mm
, *
id
, *
iyyy
);

91 
	`chdî
(
a
, 
b
, 
c
[], 
cdî
[], 
n
);

92 
	`chebev
(
a
, 
b
, 
c
[], 
m
, 
x
);

93 
	`cheb·
(
a
, 
b
, 
c
[], 
n
, (*
func
)());

94 
	`chebpc
(
c
[], 
d
[], 
n
);

95 
	`chöt
(
a
, 
b
, 
c
[], 
cöt
[], 
n
);

96 
	`chixy
(
b™g
);

97 
	`chﬁdc
(**
a
, 
n
, 
p
[]);

98 
	`chﬁ¶
(**
a
, 
n
, 
p
[], 
b
[], 
x
[]);

99 
	`chs⁄e
(
bös
[], 
ebös
[], 
nbös
, 
kn°∫
,

100 *
df
, *
chsq
, *
¥ob
);

101 
	`ch°wo
(
bös1
[], 
bös2
[], 
nbös
, 
kn°∫
,

102 *
df
, *
chsq
, *
¥ob
);

103 
	`cisi
(
x
, *
ci
, *
si
);

104 
	`˙èb1
(**
¬
, 
ni
, 
nj
, *
chisq
,

105 *
df
, *
¥ob
, *
¸amrv
, *
ccc
);

106 
	`˙èb2
(**
¬
, 
ni
, 
nj
, *
h
, *
hx
, *
hy
,

107 *
hygx
, *
hxgy
, *
uygx
, *
uxgy
, *
uxy
);

108 
	`c⁄vlv
(
d©a
[], 
n
, 
ª•ns
[], 
m
,

109 
isign
, 
™s
[]);

110 
	`c›y
(**
aout
, **
aö
, 
n
);

111 
	`c‹ªl
(
d©a1
[], 
d©a2
[], 
n
, 
™s
[]);

112 
	`cos·
(
y
[], 
n
, 
isign
);

113 
	`cos·1
(
y
[], 
n
);

114 
	`cos·2
(
y
[], 
n
, 
isign
);

115 
	`cov§t
(**
cov¨
, 
ma
, 
ü
[], 
mfô
);

116 
	`¸™k
(
n
, 
w
[], *
s
);

117 
	`cy˛ic
(
a
[], 
b
[], 
c
[], 
Æpha
, 
bëa
,

118 
r
[], 
x
[], 
n
);

119 
	`daub4
(
a
[], 
n
, 
isign
);

120 
	`daws⁄
(
x
);

121 
	`dbª¡
(
ax
, 
bx
, 
cx
,

122 (*
f
)(), (*
df
)(), 
tﬁ
, *
xmö
);

123 
	`ddpﬁy
(
c
[], 
nc
, 
x
, 
pd
[], 
nd
);

124 
	`decchk
(
°rög
[], 
n
, *
ch
);

125 
	`dîivs
(
x
, 
y
[], 
dydx
[]);

126 
	`df1dim
(
x
);

127 
	`dfour1
(
d©a
[], 
¬
, 
isign
);

128 
	`dÂmö
(
p
[], 
n
, 
gtﬁ
, *
ôî
, *
‰ë
,

129 (*
func
)([]), (*
dfunc
)([], []));

130 
	`d‰idr
((*
func
)(), 
x
, 
h
, *
îr
);

131 
	`d·c‹
(
w
, 
dñè
, 
a
, 
b
, 
íd±s
[],

132 *
c‹ª
, *
c‹im
, *
c‹Ác
);

133 
	`d·öt
((*
func
)(), 
a
, 
b
, 
w
,

134 *
cosöt
, *
sööt
);

135 
	`di„q
(
k
, 
k1
, 
k2
, 
jsf
, 
is1
, 
isf
,

136 
ödexv
[], 
√
, **
s
, **
y
);

137 
	`dlömö
(
p
[], 
xi
[], 
n
, *
‰ë
,

138 (*
func
)([]), (*
dfunc
)([], []));

139 
	`dpythag
(
a
, 
b
);

140 
	`dªÆ·
(
d©a
[], 
n
, 
isign
);

141 
	`d•rßx
(
ß
[], 
ija
[], 
x
[], 
b
[],

142 
n
);

143 
	`d•r°x
(
ß
[], 
ija
[], 
x
[], 
b
[],

144 
n
);

145 
	`dsvbksb
(**
u
, 
w
[], **
v
, 
m
, 
n
, 
b
[],

146 
x
[]);

147 
	`dsvdcmp
(**
a
, 
m
, 
n
, 
w
[], **
v
);

148 
	`e˛ass
(
nf
[], 
n
, 
li°a
[], 
li°b
[], 
m
);

149 
	`e˛azz
(
nf
[], 
n
, (*
equiv
)(, ));

150 
	`ei
(
x
);

151 
	`eig§t
(
d
[], **
v
, 
n
);

152 
	`ñÀ
(
phi
, 
ak
);

153 
	`ñlf
(
phi
, 
ak
);

154 
	`ñÕi
(
phi
, 
í
, 
ak
);

155 
	`ñmhes
(**
a
, 
n
);

156 
	`îfcc
(
x
);

157 
	`îff
(
x
);

158 
	`îffc
(
x
);

159 
	`eulsum
(*
sum
, 
ãrm
, 
jãrm
, 
wk•
[]);

160 
	`evlmem
(
fdt
, 
d
[], 
m
, 
xms
);

161 
	`expdev
(*
idum
);

162 
	`expöt
(
n
, 
x
);

163 
	`f1
(
x
);

164 
	`f1dim
(
x
);

165 
	`f2
(
y
);

166 
	`f3
(
z
);

167 
	`Á˘ 
(
n
);

168 
	`Á˘æ
(
n
);

169 
	`Á•î
(
x
[], 
y
[], 
n
, 
oÁc
, 
hiÁc
,

170 
wk1
[], 
wk2
[], 
nwk
, *
nout
,

171 *
jmax
, *
¥ob
);

172 
	`fdjac
(
n
, 
x
[], 
fvec
[], **
df
,

173 (*
vecfunc
)(, [], []));

174 
	`fgauss
(
x
, 
a
[], *
y
, 
dyda
[], 
«
);

175 
	`fûl0
(**
u
, 
n
);

176 
	`fô
(
x
[], 
y
[], 
nd©a
, 
sig
[], 
mwt
,

177 *
a
, *
b
, *
siga
, *
sigb
, *
chi2
, *
q
);

178 
	`fôexy
(
x
[], 
y
[], 
nd©
, 
sigx
[], 
sigy
[],

179 *
a
, *
b
, *
siga
, *
sigb
, *
chi2
, *
q
);

180 
	`fixπs
(
d
[], 
m
);

181 
	`Êeg
(
x
, 
∂
[], 
∆
);

182 
	`Êmo⁄
(
n
, 
≈h
, *
jd
, *
‰ac
);

184 
	`four1
(
d©a
[], 
¬
, 
isign
);

185 
	`fouªw
(
FILE
 *
fûe
[5], *
«
, *
nb
, *
nc
, *
nd
);

186 
	`fourfs
(
FILE
 *
fûe
[5], 
¬
[], 
ndim
, 
isign
);

187 
	`fou∫
(
d©a
[], 
¬
[], 
ndim
, 
isign
);

188 
	`Âﬁy
(
x
, 
p
[], 
≈
);

189 
	`‰ed2
(
n
, 
a
, 
b
, 
t
[], 
f
[], 
w
[],

190 (*
g
)(), (*
ak
)(, ));

191 
	`‰edö
(
x
, 
n
, 
a
, 
b
, 
t
[], 
f
[], 
w
[],

192 (*
g
)(), (*
ak
)(, ));

193 
	`‰íñ
(
x
, *
s
, *
c
);

194 
	`‰¥mn
(
p
[], 
n
, 
·ﬁ
, *
ôî
, *
‰ë
,

195 (*
func
)([]), (*
dfunc
)([], []));

196 
	`·e°
(
d©a1
[], 
n1
, 
d©a2
[], 
n2
,

197 *
f
, *
¥ob
);

198 
	`gamdev
(
ü
, *
idum
);

199 
	`gamm 
(
xx
);

200 
	`gammp
(
a
, 
x
);

201 
	`gammq
(
a
, 
x
);

202 
	`gasdev
(*
idum
);

203 
	`gaucof
(
n
, 
a
[], 
b
[], 
amu0
, 
x
[], 
w
[]);

204 
	`gauhî
(
x
[], 
w
[], 
n
);

205 
	`gaujac
(
x
[], 
w
[], 
n
, 
Æf
, 
bë
);

206 
	`gauœg
(
x
[], 
w
[], 
n
, 
Æf
);

207 
	`gauÀg
(
x1
, 
x2
, 
x
[], 
w
[], 
n
);

208 
	`gaussj
(**
a
, 
n
, **
b
, 
m
);

209 
	`gcf
(*
gammcf
, 
a
, 
x
, *
g 
);

210 
	`gﬁdí
(
ax
, 
bx
, 
cx
, (*
f
)(), 
tﬁ
,

211 *
xmö
);

212 
	`g£r
(*
gam£r
, 
a
, 
x
, *
g 
);

213 
	`hp£l
(
m
, 
n
, 
¨r
[], 
hóp
[]);

214 
	`hps‹t
(
n
, 
ø
[]);

215 
	`hqr
(**
a
, 
n
, 
wr
[], 
wi
[]);

216 
	`huÁµ
(
ödex
[], 
≈rob
[], 
n
,

217 
i
);

218 
	`hufdec
(*
ich
, *
code
, 
lcode
,

219 *
nb
, 
huffcode
 *
hcode
);

220 
	`hu„nc
(
ich
, **
codï
, *
lcode
,

221 *
nb
, 
huffcode
 *
hcode
);

222 
	`hufmak
(
n‰eq
[], 
nchö
, *
û⁄g
,

223 *
∆⁄g
, 
huffcode
 *
hcode
);

224 
	`hu¡
(
xx
[], 
n
, 
x
, *
jlo
);

225 
	`hypdrv
(
s
, 
yy
[], 
dyyds
[]);

226 
fcom∂ex
 
	`hypgeo
(fcom∂ex 
a
, fcom∂ex 
b
, fcom∂ex 
c
, fcom∂ex 
z
);

227 
	`hyp£r
(
fcom∂ex
 
a
, fcom∂ex 
b
, fcom∂ex 
c
, fcom∂ex 
z
,

228 
fcom∂ex
 *
£rõs
, fcom∂ex *
dîiv
);

229 
	`i¸c
(
¸c
, *
buÂå
,

230 
Àn
, 
jöô
, 
jªv
);

231 
	`i¸c1
(
¸c
, 
⁄ech
);

232 
	`igøy
(
n
, 
is
);

233 
	`iödexx
(
n
, 
¨r
[], 
ödx
[]);

234 
	`ödexx
(
n
, 
¨r
[], 
ödx
[]);

235 
	`öãΩ
(**
uf
, **
uc
, 
nf
);

236 
	`úbô1
(*
i£ed
);

237 
	`úbô2
(*
i£ed
);

238 
	`jacobi
(**
a
, 
n
, 
d
[], **
v
, *
ƒŸ
);

239 
	`jacobn
(
x
, 
y
[], 
dfdx
[], **
dfdy
, 
n
);

240 
	`julday
(
mm
, 
id
, 
iyyy
);

241 
	`kídl1
(
d©a1
[], 
d©a2
[], 
n
, *
èu
, *
z
,

242 *
¥ob
);

243 
	`kídl2
(**
èb
, 
i
, 
j
, *
èu
, *
z
, *
¥ob
);

244 
	`kîmom
(
w
[], 
y
, 
m
);

245 
	`ks2d1s
(
x1
[], 
y1
[], 
n1
,

246 (*
quadvl
)(, , *, *, *, *),

247 *
d1
, *
¥ob
);

248 
	`ks2d2s
(
x1
[], 
y1
[], 
n1
, 
x2
[], 
y2
[],

249 
n2
, *
d
, *
¥ob
);

250 
	`ks⁄e
(
d©a
[], 
n
, (*
func
)(), *
d
,

251 *
¥ob
);

252 
	`k°wo
(
d©a1
[], 
n1
, 
d©a2
[], 
n2
,

253 *
d
, *
¥ob
);

254 
	`œguî
(
fcom∂ex
 
a
[], 
m
, fcom∂ex *
x
, *
ôs
);

255 
	`lfô
(
x
[], 
y
[], 
sig
[], 
nd©
, 
a
[], 
ü
[],

256 
ma
, **
cov¨
, *
chisq
, (*
funcs
)(, [], ));

257 
	`löbcg
(
n
, 
b
[], 
x
[], 
ôﬁ
, 
tﬁ
,

258 
ômax
, *
ôî
, *
îr
);

259 
	`lömö
(
p
[], 
xi
[], 
n
, *
‰ë
,

260 (*
func
)([]));

261 
	` §ch
(
n
, 
xﬁd
[], 
fﬁd
, 
g
[], 
p
[], 
x
[],

262 *
f
, 
°pmax
, *
check
, (*
func
)([]));

263 
	`lﬂd
(
x1
, 
v
[], 
y
[]);

264 
	`lﬂd1
(
x1
, 
v1
[], 
y
[]);

265 
	`lﬂd2
(
x2
, 
v2
[], 
y
[]);

266 
	`loˇã
(
xx
[], 
n
, 
x
, *
j
);

267 
	`l›
(**
out
, **
u
, 
n
);

268 
	`lubksb
(**
a
, 
n
, *
ödx
, 
b
[]);

269 
	`ludcmp
(**
a
, 
n
, *
ödx
, *
d
);

270 
	`mach¨
(*
ibëa
, *
ô
, *
únd
, *
ngrd
,

271 *
machï
, *
√gï
, *
õxp
, *
möexp
, *
maxexp
,

272 *
ïs
, *
ï¢eg
, *
xmö
, *
xmax
);

273 
	`m©add
(**
a
, **
b
, **
c
, 
n
);

274 
	`m©sub
(**
a
, **
b
, **
c
, 
n
);

275 
	`medfô
(
x
[], 
y
[], 
nd©a
, *
a
, *
b
, *
abdev
);

276 
	`memcof
(
d©a
[], 
n
, 
m
, *
xms
, 
d
[]);

277 
	`mër›
(
de
, 
t
);

278 
	`mgÁs
(**
u
, 
n
, 
maxcyc
);

279 
	`mglö
(**
u
, 
n
, 
ncy˛e
);

280 
	`midexp
((*
funk
)(), 
Ø
, 
bb
, 
n
);

281 
	`midöf
((*
funk
)(), 
Ø
, 
bb
, 
n
);

282 
	`mid≤t
((*
func
)(), 
a
, 
b
, 
n
);

283 
	`midsql
((*
funk
)(), 
Ø
, 
bb
, 
n
);

284 
	`midsqu
((*
funk
)(), 
Ø
, 
bb
, 
n
);

285 
	`mi£r
((*
func
)([]), 
ªgn
[], 
ndim
, 
≈ts
,

286 
dôh
, *
ave
, *
v¨
);

287 
	`mmid
(
y
[], 
dydx
[], 
nv¨
, 
xs
, 
htŸ
,

288 
n°ï
, 
yout
[], (*
dîivs
)(, [], []));

289 
	`mnbøk
(*
ax
, *
bx
, *
cx
, *
Á
, *
fb
,

290 *
fc
, (*
func
)());

291 
	`m√wt
(
¡rül
, 
x
[], 
n
, 
tﬁx
, 
tﬁf
);

292 
	`momít
(
d©a
[], 
n
, *
ave
, *
adev
, *
sdev
,

293 *
v¨
, *
skew
, *
cuπ
);

294 
	`mp2d‰
(
a
[], 
s
[], 
n
, *
m
);

295 
	`m∑dd
(
w
[], 
u
[], 
v
[], 
n
);

296 
	`mpdiv
(
q
[], 
r
[], 
u
[],

297 
v
[], 
n
, 
m
);

298 
	`mpöv
(
u
[], 
v
[], 
n
, 
m
);

299 
	`m∂sh
(
u
[], 
n
);

300 
	`mpmov
(
u
[], 
v
[], 
n
);

301 
	`mpmul
(
w
[], 
u
[], 
v
[], 
n
,

302 
m
);

303 
	`m≤eg
(
u
[], 
n
);

304 
	`mµi
(
n
);

305 
	`m¥ove
(**
a
, **
Æud
, 
n
, 
ödx
[], 
b
[],

306 
x
[]);

307 
	`mpßd
(
w
[], 
u
[], 
n
, 
iv
);

308 
	`mpsdv
(
w
[], 
u
[], 
n
, 
iv
, *
ú
);

309 
	`mpsmu
(
w
[], 
u
[], 
n
, 
iv
);

310 
	`mpsqπ
(
w
[], 
u
[], 
v
[], 
n
,

311 
m
);

312 
	`mpsub
(*
is
, 
w
[], 
u
[], 
v
[],

313 
n
);

314 
	`mrqcof
(
x
[], 
y
[], 
sig
[], 
nd©a
, 
a
[],

315 
ü
[], 
ma
, **
Æpha
, 
bëa
[], *
chisq
,

316 (*
funcs
)(, [], *, [], ));

317 
	`mrqmö
(
x
[], 
y
[], 
sig
[], 
nd©a
, 
a
[],

318 
ü
[], 
ma
, **
cov¨
, **
Æpha
, *
chisq
,

319 (*
funcs
)(, [], *, [], ), *
Æamda
);

320 
	`√wt
(
x
[], 
n
, *
check
,

321 (*
vecfunc
)(, [], []));

322 
	`odeöt
(
y°¨t
[], 
nv¨
, 
x1
, 
x2
,

323 
ïs
, 
h1
, 
hmö
, *
nok
, *
nbad
,

324 (*
dîivs
)(, [], []),

325 (*
rkqs
)([], [], , *, , ,

327 
	`‹thog
(
n
, 
™u
[], 
Æpha
[], 
bëa
[], 
a
[],

328 
b
[]);

329 
	`∑de
(
cof
[], 
n
, *
ªsid
);

330 
	`pccheb
(
d
[], 
c
[], 
n
);

331 
	`pcsh·
(
a
, 
b
, 
d
[], 
n
);

332 
	`≥¨¢
(
x
[], 
y
[], 
n
, *
r
, *
¥ob
,

333 *
z
);

334 
	`≥riod
(
x
[], 
y
[], 
n
, 
oÁc
, 
hiÁc
,

335 
px
[], 
py
[], 
≈
, *
nout
, *
jmax
, *
¥ob
);

336 
	`pik§2
(
n
, 
¨r
[], 
bº
[]);

337 
	`pik§t
(
n
, 
¨r
[]);

338 
	`pövs
(
õ1
, 
õ2
, 
je1
, 
jsf
, 
jc1
, 
k
,

339 ***
c
, **
s
);

340 
	`∂gndr
(
l
, 
m
, 
x
);

341 
	`poidev
(
xm
, *
idum
);

342 
	`pﬁc€
(
x
[], 
y
[], 
n
, 
cof
[]);

343 
	`pﬁcof
(
xa
[], 
ya
[], 
n
, 
cof
[]);

344 
	`pﬁdiv
(
u
[], 
n
, 
v
[], 
nv
, 
q
[], 
r
[]);

345 
	`pﬁö2
(
x1a
[], 
x2a
[], **
ya
, 
m
, 
n
,

346 
x1
, 
x2
, *
y
, *
dy
);

347 
	`pﬁöt
(
xa
[], 
ya
[], 
n
, 
x
, *
y
, *
dy
);

348 
	`powñl
(
p
[], **
xi
, 
n
, 
·ﬁ
, *
ôî
, *
‰ë
,

349 (*
func
)([]));

350 
	`¥edic
(
d©a
[], 
nd©a
, 
d
[], 
m
, 
futuª
[], 
nfut
);

351 
	`¥obks
(
Æam
);

352 
	`psdes
(*
lw‹d
, *
úw‹d
);

353 
	`pwt
(
a
[], 
n
, 
isign
);

354 
	`pwt£t
(
n
);

355 
	`pythag
(
a
, 
b
);

356 
	`pzexå
(
õ°
, 
xe°
, 
ye°
[], 
yz
[], 
dy
[],

357 
nv
);

358 
	`qgaus
((*
func
)(), 
a
, 
b
);

359 
	`qrdcmp
(**
a
, 
n
, *
c
, *
d
, *
sög
);

360 
	`qromb
((*
func
)(), 
a
, 
b
);

361 
	`qromo
((*
func
)(), 
a
, 
b
,

362 (*
choo£
)((*)(), , , ));

363 
	`qroŸ
(
p
[], 
n
, *
b
, *
c
, 
ïs
);

364 
	`qrsﬁv
(**
a
, 
n
, 
c
[], 
d
[], 
b
[]);

365 
	`qrupdt
(**
r
, **
qt
, 
n
, 
u
[], 
v
[]);

366 
	`qsimp
((*
func
)(), 
a
, 
b
);

367 
	`qå≠
((*
func
)(), 
a
, 
b
);

368 
	`quad3d
((*
func
)(, , ), 
x1
, 
x2
);

369 
	`quad˘
(
x
, 
y
, 
xx
[], 
yy
[], 
¬
,

370 *
Á
, *
fb
, *
fc
, *
fd
);

371 
	`quadmx
(**
a
, 
n
);

372 
	`quadvl
(
x
, 
y
, *
Á
, *
fb
, *
fc
, *
fd
);

373 
	`øn0
(*
idum
);

374 
	`øn1
(*
idum
);

375 
	`øn2
(*
idum
);

376 
	`øn3
(*
idum
);

377 
	`øn4
(*
idum
);

378 
	`ønk
(
n
, 
ödx
[], 
ú™k
[]);

379 
	`ø≈t
(
±
[], 
ªgn
[], 
n
);

380 
	`øtöt
(
xa
[], 
ya
[], 
n
, 
x
, *
y
, *
dy
);

381 
	`øésq
((*
‚
)(), 
a
, 
b
, 
mm
, 
kk
,

382 
cof
[], *
dev
);

383 
	`øtvÆ
(
x
, 
cof
[], 
mm
, 
kk
);

384 
	`rc
(
x
, 
y
);

385 
	`rd
(
x
, 
y
, 
z
);

386 
	`ªÆ·
(
d©a
[], 
n
, 
isign
);

387 
	`ªbö
(
rc
, 
nd
, 
r
[], 
xö
[], 
xi
[]);

388 
	`ªd
(
iz1
, 
iz2
, 
jz1
, 
jz2
, 
jm1
, 
jm2
, 
jmf
,

389 
ic1
, 
jc1
, 
jcf
, 
kc
, ***
c
, **
s
);

390 
	`ªœx
(**
u
, **
rhs
, 
n
);

391 
	`ªœx2
(**
u
, **
rhs
, 
n
);

392 
	`ªsid
(**
ªs
, **
u
, **
rhs
, 
n
);

393 
	`ªvc°
(
x
[], 
y
[], 
i‹dî
[], 
ncôy
, 
n
[]);

394 
	`ªvî£
(
i‹dî
[], 
ncôy
, 
n
[]);

395 
	`rf
(
x
, 
y
, 
z
);

396 
	`rj
(
x
, 
y
, 
z
, 
p
);

397 
	`rk4
(
y
[], 
dydx
[], 
n
, 
x
, 
h
, 
yout
[],

398 (*
dîivs
)(, [], []));

399 
	`rkck
(
y
[], 
dydx
[], 
n
, 
x
, 
h
,

400 
yout
[], 
yîr
[], (*
dîivs
)(, [], []));

401 
	`rkdumb
(
v°¨t
[], 
nv¨
, 
x1
, 
x2
, 
n°ï
,

402 (*
dîivs
)(, [], []));

403 
	`rkqs
(
y
[], 
dydx
[], 
n
, *
x
,

404 
håy
, 
ïs
, 
ysˇl
[], *
hdid
, *
h√xt
,

405 (*
dîivs
)(, [], []));

406 
	`æ·3
(***
d©a
, **
•eq
, 
¬1
,

407 
¬2
, 
¬3
, 
isign
);

408 
	`rofunc
(
b
);

409 
	`rŸ©e
(**
r
, **
qt
, 
n
, 
i
, 
a
, 
b
);

410 
	`rsﬁv
(**
a
, 
n
, 
d
[], 
b
[]);

411 
	`r°r˘
(**
uc
, **
uf
, 
nc
);

412 
	`πbis
((*
func
)(), 
x1
, 
x2
, 
xacc
);

413 
	`πÊ•
((*
func
)(), 
x1
, 
x2
, 
xacc
);

414 
	`π√wt
((*
funcd
)(, *, *), 
x1
, 
x2
,

415 
xacc
);

416 
	`πß„
((*
funcd
)(, *, *), 
x1
, 
x2
,

417 
xacc
);

418 
	`π£c
((*
func
)(), 
x1
, 
x2
, 
xacc
);

419 
	`πmuŒî
((*
func
)(), 
x1
, 
x2
, 
xacc
);

420 
	`rzexå
(
õ°
, 
xe°
, 
ye°
[], 
yz
[], 
dy
[], 
nv
);

421 
	`ßvgﬁ
(
c
[], 
≈
, 
∆
, 
ƒ
, 
ld
, 
m
);

422 
	`sc‹e
(
xf
, 
y
[], 
f
[]);

423 
	`s¸sho
((*
fx
)());

424 
	`£À˘
(
k
, 
n
, 
¨r
[]);

425 
	`£lù
(
k
, 
n
, 
¨r
[]);

426 
	`shñl
(
n
, 
a
[]);

427 
	`shoŸ
(
n
, 
v
[], 
f
[]);

428 
	`shoŸf
(
n
, 
v
[], 
f
[]);

429 
	`simp1
(**
a
, 
mm
, 
Œ
[], 
∆l
, 
übf
, *
kp
,

430 *
bmax
);

431 
	`simp2
(**
a
, 
m
, 
n
, *
ù
, 
kp
);

432 
	`simp3
(**
a
, 
i1
, 
k1
, 
ù
, 
kp
);

433 
	`sim∂x
(**
a
, 
m
, 
n
, 
m1
, 
m2
, 
m3
, *
iˇ£
,

434 
izrov
[], 
ùosv
[]);

435 
	`sim¥
(
y
[], 
dydx
[], 
dfdx
[], **
dfdy
,

436 
n
, 
xs
, 
htŸ
, 
n°ï
, 
yout
[],

437 (*
dîivs
)(, [], []));

438 
	`sö·
(
y
[], 
n
);

439 
	`¶vsm2
(**
u
, **
rhs
);

440 
	`¶vsml
(**
u
, **
rhs
);

441 
	`¢˙dn
(
uu
, 
emmc
, *
¢
, *
˙
, *
dn
);

442 
	`¢rm
(
n
, 
sx
[], 
ôﬁ
);

443 
	`sob£q
(*
n
, 
x
[]);

444 
	`sﬁvde
(
ômax
, 
c⁄v
, 
¶owc
, 
sˇlv
[],

445 
ödexv
[], 
√
, 
nb
, 
m
, **
y
, ***
c
, **
s
);

446 
	`s‹
(**
a
, **
b
, **
c
, **
d
, **
e
,

447 **
f
, **
u
, 
jmax
, 
rjac
);

448 
	`s‹t
(
n
, 
¨r
[]);

449 
	`s‹t2
(
n
, 
¨r
[], 
bº
[]);

450 
	`s‹t3
(
n
, 
ø
[], 
rb
[], 
rc
[]);

451 
	`•˘rm
(
FILE
 *
Â
, 
p
[], 
m
, 
k
, 
ovæ≠
);

452 
	`•ór
(
d©a1
[], 
d©a2
[], 
n
, *
d
, *
zd
,

453 *
¥obd
, *
rs
, *
¥obrs
);

454 
	`•hbes
(
n
, 
x
, *
sj
, *
sy
, *
sjp
, *
syp
);

455 
	`•lõ2
(
x1a
[], 
x2a
[], **
ya
, 
m
, 
n
, **
y2a
);

456 
	`•lö2
(
x1a
[], 
x2a
[], **
ya
, **
y2a
, 
m
, 
n
,

457 
x1
, 
x2
, *
y
);

458 
	`•löe
(
x
[], 
y
[], 
n
, 
yp1
, 
y≤
, 
y2
[]);

459 
	`•löt
(
xa
[], 
ya
[], 
y2a
[], 
n
, 
x
, *
y
);

460 
	`•ªad
(
y
, 
yy
[], 
n
, 
x
, 
m
);

461 
	`•rßx
(
ß
[], 
ija
[], 
x
[], 
b
[],

462 
n
);

463 
	`•rsö
(**
a
, 
n
, 
thªsh
, 
nmax
, 
ß
[],

464 
ija
[]);

465 
	`•r•m
(
ß
[], 
ija
[], 
sb
[], 
ijb
[],

466 
sc
[], 
ijc
[]);

467 
	`•r°m
(
ß
[], 
ija
[], 
sb
[], 
ijb
[],

468 
thªsh
, 
nmax
, 
sc
[], 
ijc
[]);

469 
	`•r°p
(
ß
[], 
ija
[], 
sb
[], 
ijb
[]);

470 
	`•r°x
(
ß
[], 
ija
[], 
x
[], 
b
[],

471 
n
);

472 
	`°ifbs
(
y
[], 
dydx
[], 
nv
, *
xx
,

473 
håy
, 
ïs
, 
ysˇl
[], *
hdid
, *
h√xt
,

474 (*
dîivs
)(, [], []));

475 
	`°iff
(
y
[], 
dydx
[], 
n
, *
x
,

476 
håy
, 
ïs
, 
ysˇl
[], *
hdid
, *
h√xt
,

477 (*
dîivs
)(, [], []));

478 
	`°€rm
(
y
[], 
d2y
[], 
nv
, 
xs
,

479 
htŸ
, 
n°ï
, 
yout
[],

480 (*
dîivs
)(, [], []));

481 
	`svbksb
(**
u
, 
w
[], **
v
, 
m
, 
n
, 
b
[],

482 
x
[]);

483 
	`svdcmp
(**
a
, 
m
, 
n
, 
w
[], **
v
);

484 
	`svdfô
(
x
[], 
y
[], 
sig
[], 
nd©a
, 
a
[],

485 
ma
, **
u
, **
v
, 
w
[], *
chisq
,

486 (*
funcs
)(, [], ));

487 
	`svdv¨
(**
v
, 
ma
, 
w
[], **
cvm
);

488 
	`t€∂z
(
r
[], 
x
[], 
y
[], 
n
);

489 
	`çã°
(
d©a1
[], 
d©a2
[], 
n
, *
t
, *
¥ob
);

490 
	`tqli
(
d
[], 
e
[], 
n
, **
z
);

491 
	`å≠zd
((*
func
)(), 
a
, 
b
, 
n
);

492 
	`åed2
(**
a
, 
n
, 
d
[], 
e
[]);

493 
	`åidag
(
a
[], 
b
[], 
c
[], 
r
[], 
u
[],

494 
n
);

495 
	`ånc°
(
x
[], 
y
[], 
i‹dî
[], 
ncôy
, 
n
[]);

496 
	`ån•t
(
i‹dî
[], 
ncôy
, 
n
[]);

497 
	`âe°
(
d©a1
[], 
n1
, 
d©a2
[], 
n2
,

498 *
t
, *
¥ob
);

499 
	`tuã°
(
d©a1
[], 
n1
, 
d©a2
[], 
n2
,

500 *
t
, *
¥ob
);

501 
	`twof·
(
d©a1
[], 
d©a2
[], 
f·1
[], 
f·2
[],

502 
n
);

503 
	`v™dî
(
x
[], 
w
[], 
q
[], 
n
);

504 
	`vegas
(
ªgn
[], 
ndim
, (*
fxn
)([], ), 
öô
,

505 
nˇŒ
, 
ômx
, 
≈∫
, *
tgøl
, *
sd
,

506 *
chi2a
);

507 
	`vﬁåa
(
n
, 
m
, 
t0
, 
h
, *
t
, **
f
,

508 (*
g
)(, ), (*
ak
)(, , , ));

509 
	`wt1
(
a
[], 
n
, 
isign
,

510 (*
wt°ï
)([], , ));

511 
	`wä
(
a
[], 
¬
[], 
ndim
, 
isign
,

512 (*
wt°ï
)([], , ));

513 
	`wwghts
(
wghts
[], 
n
, 
h
,

514 (*
kîmom
)([], ,));

515 
	`zbøc
((*
func
)(), *
x1
, *
x2
);

516 
	`zbøk
((*
fx
)(), 
x1
, 
x2
, 
n
, 
xb1
[],

517 
xb2
[], *
nb
);

518 
	`zbª¡
((*
func
)(), 
x1
, 
x2
, 
tﬁ
);

519 
	`zrhqr
(
a
[], 
m
, 
πr
[], 
πi
[]);

520 
	`zriddr
((*
func
)(), 
x1
, 
x2
, 
xacc
);

521 
	`zroŸs
(
fcom∂ex
 
a
[], 
m
, fcom∂ex 
roŸs
[], 
pﬁish
);

526 
	`addöt
();

527 
	`aúy
();

528 
	`amebß
();

529 
	`am€ba
();

530 
	`amŸry
();

531 
	`amŸß
();

532 
	`™√Æ
();

533 
	`™‹m2
();

534 
	`¨cmak
();

535 
	`¨code
();

536 
	`¨csum
();

537 
	`asﬁve
();

538 
	`©imes
();

539 
	`avev¨
();

540 
	`bÆ™c
();

541 
	`b™bks
();

542 
	`b™dec
();

543 
	`b™mul
();

544 
	`bcucof
();

545 
	`bcuöt
();

546 
	`beschb
();

547 
	`bessi
();

548 
	`bessi0
();

549 
	`bessi1
();

550 
	`bessik
();

551 
	`bessj
();

552 
	`bessj0
();

553 
	`bessj1
();

554 
	`bessjy
();

555 
	`bessk
();

556 
	`bessk0
();

557 
	`bessk1
();

558 
	`bessy
();

559 
	`bessy0
();

560 
	`bessy1
();

561 
	`bëa
();

562 
	`bëacf
();

563 
	`bëai
();

564 
	`bico
();

565 
	`bksub
();

566 
	`b∆dev
();

567 
	`bª¡
();

568 
	`broydn
();

569 
	`bs°ï
();

570 
	`ˇld©
();

571 
	`chdî
();

572 
	`chebev
();

573 
	`cheb·
();

574 
	`chebpc
();

575 
	`chöt
();

576 
	`chixy
();

577 
	`chﬁdc
();

578 
	`chﬁ¶
();

579 
	`chs⁄e
();

580 
	`ch°wo
();

581 
	`cisi
();

582 
	`˙èb1
();

583 
	`˙èb2
();

584 
	`c⁄vlv
();

585 
	`c›y
();

586 
	`c‹ªl
();

587 
	`cos·
();

588 
	`cos·1
();

589 
	`cos·2
();

590 
	`cov§t
();

591 
	`¸™k
();

592 
	`cy˛ic
();

593 
	`daub4
();

594 
	`daws⁄
();

595 
	`dbª¡
();

596 
	`ddpﬁy
();

597 
	`decchk
();

598 
	`dîivs
();

599 
	`df1dim
();

600 
	`dfour1
();

601 
	`dÂmö
();

602 
	`d‰idr
();

603 
	`d·c‹
();

604 
	`d·öt
();

605 
	`di„q
();

606 
	`dlömö
();

607 
	`dpythag
();

608 
	`dªÆ·
();

609 
	`d•rßx
();

610 
	`d•r°x
();

611 
	`dsvbksb
();

612 
	`dsvdcmp
();

613 
	`e˛ass
();

614 
	`e˛azz
();

615 
	`ei
();

616 
	`eig§t
();

617 
	`ñÀ
();

618 
	`ñlf
();

619 
	`ñÕi
();

620 
	`ñmhes
();

621 
	`îfcc
();

622 
	`îff
();

623 
	`îffc
();

624 
	`eulsum
();

625 
	`evlmem
();

626 
	`expdev
();

627 
	`expöt
();

628 
	`f1
();

629 
	`f1dim
();

630 
	`f2
();

631 
	`f3
();

632 
	`Á˘ 
();

633 
	`Á˘æ
();

634 
	`Á•î
();

635 
	`fdjac
();

636 
	`fgauss
();

637 
	`fûl0
();

638 
	`fô
();

639 
	`fôexy
();

640 
	`fixπs
();

641 
	`Êeg
();

642 
	`Êmo⁄
();

644 
	`four1
();

645 
	`fouªw
();

646 
	`fourfs
();

647 
	`fou∫
();

648 
	`Âﬁy
();

649 
	`‰ed2
();

650 
	`‰edö
();

651 
	`‰íñ
();

652 
	`‰¥mn
();

653 
	`·e°
();

654 
	`gamdev
();

655 
	`gamm 
();

656 
	`gammp
();

657 
	`gammq
();

658 
	`gasdev
();

659 
	`gaucof
();

660 
	`gauhî
();

661 
	`gaujac
();

662 
	`gauœg
();

663 
	`gauÀg
();

664 
	`gaussj
();

665 
	`gcf
();

666 
	`gﬁdí
();

667 
	`g£r
();

668 
	`hp£l
();

669 
	`hps‹t
();

670 
	`hqr
();

671 
	`huÁµ
();

672 
	`hufdec
();

673 
	`hu„nc
();

674 
	`hufmak
();

675 
	`hu¡
();

676 
	`hypdrv
();

677 
fcom∂ex
 
	`hypgeo
();

678 
	`hyp£r
();

679 
	`i¸c
();

680 
	`i¸c1
();

681 
	`igøy
();

682 
	`iödexx
();

683 
	`ödexx
();

684 
	`öãΩ
();

685 
	`úbô1
();

686 
	`úbô2
();

687 
	`jacobi
();

688 
	`jacobn
();

689 
	`julday
();

690 
	`kídl1
();

691 
	`kídl2
();

692 
	`kîmom
();

693 
	`ks2d1s
();

694 
	`ks2d2s
();

695 
	`ks⁄e
();

696 
	`k°wo
();

697 
	`œguî
();

698 
	`lfô
();

699 
	`löbcg
();

700 
	`lömö
();

701 
	` §ch
();

702 
	`lﬂd
();

703 
	`lﬂd1
();

704 
	`lﬂd2
();

705 
	`loˇã
();

706 
	`l›
();

707 
	`lubksb
();

708 
	`ludcmp
();

709 
	`mach¨
();

710 
	`m©add
();

711 
	`m©sub
();

712 
	`medfô
();

713 
	`memcof
();

714 
	`mër›
();

715 
	`mgÁs
();

716 
	`mglö
();

717 
	`midexp
();

718 
	`midöf
();

719 
	`mid≤t
();

720 
	`midsql
();

721 
	`midsqu
();

722 
	`mi£r
();

723 
	`mmid
();

724 
	`mnbøk
();

725 
	`m√wt
();

726 
	`momít
();

727 
	`mp2d‰
();

728 
	`m∑dd
();

729 
	`mpdiv
();

730 
	`mpöv
();

731 
	`m∂sh
();

732 
	`mpmov
();

733 
	`mpmul
();

734 
	`m≤eg
();

735 
	`mµi
();

736 
	`m¥ove
();

737 
	`mpßd
();

738 
	`mpsdv
();

739 
	`mpsmu
();

740 
	`mpsqπ
();

741 
	`mpsub
();

742 
	`mrqcof
();

743 
	`mrqmö
();

744 
	`√wt
();

745 
	`odeöt
();

746 
	`‹thog
();

747 
	`∑de
();

748 
	`pccheb
();

749 
	`pcsh·
();

750 
	`≥¨¢
();

751 
	`≥riod
();

752 
	`pik§2
();

753 
	`pik§t
();

754 
	`pövs
();

755 
	`∂gndr
();

756 
	`poidev
();

757 
	`pﬁc€
();

758 
	`pﬁcof
();

759 
	`pﬁdiv
();

760 
	`pﬁö2
();

761 
	`pﬁöt
();

762 
	`powñl
();

763 
	`¥edic
();

764 
	`¥obks
();

765 
	`psdes
();

766 
	`pwt
();

767 
	`pwt£t
();

768 
	`pythag
();

769 
	`pzexå
();

770 
	`qgaus
();

771 
	`qrdcmp
();

772 
	`qromb
();

773 
	`qromo
();

774 
	`qroŸ
();

775 
	`qrsﬁv
();

776 
	`qrupdt
();

777 
	`qsimp
();

778 
	`qå≠
();

779 
	`quad3d
();

780 
	`quad˘
();

781 
	`quadmx
();

782 
	`quadvl
();

783 
	`øn0
();

784 
	`øn1
();

785 
	`øn2
();

786 
	`øn3
();

787 
	`øn4
();

788 
	`ønk
();

789 
	`ø≈t
();

790 
	`øtöt
();

791 
	`øésq
();

792 
	`øtvÆ
();

793 
	`rc
();

794 
	`rd
();

795 
	`ªÆ·
();

796 
	`ªbö
();

797 
	`ªd
();

798 
	`ªœx
();

799 
	`ªœx2
();

800 
	`ªsid
();

801 
	`ªvc°
();

802 
	`ªvî£
();

803 
	`rf
();

804 
	`rj
();

805 
	`rk4
();

806 
	`rkck
();

807 
	`rkdumb
();

808 
	`rkqs
();

809 
	`æ·3
();

810 
	`rofunc
();

811 
	`rŸ©e
();

812 
	`rsﬁv
();

813 
	`r°r˘
();

814 
	`πbis
();

815 
	`πÊ•
();

816 
	`π√wt
();

817 
	`πß„
();

818 
	`π£c
();

819 
	`πmuŒî
();

820 
	`rzexå
();

821 
	`ßvgﬁ
();

822 
	`sc‹e
();

823 
	`s¸sho
();

824 
	`£À˘
();

825 
	`£lù
();

826 
	`shñl
();

827 
	`shoŸ
();

828 
	`shoŸf
();

829 
	`simp1
();

830 
	`simp2
();

831 
	`simp3
();

832 
	`sim∂x
();

833 
	`sim¥
();

834 
	`sö·
();

835 
	`¶vsm2
();

836 
	`¶vsml
();

837 
	`¢˙dn
();

838 
	`¢rm
();

839 
	`sob£q
();

840 
	`sﬁvde
();

841 
	`s‹
();

842 
	`s‹t
();

843 
	`s‹t2
();

844 
	`s‹t3
();

845 
	`•˘rm
();

846 
	`•ór
();

847 
	`•hbes
();

848 
	`•lõ2
();

849 
	`•lö2
();

850 
	`•löe
();

851 
	`•löt
();

852 
	`•ªad
();

853 
	`•rßx
();

854 
	`•rsö
();

855 
	`•r•m
();

856 
	`•r°m
();

857 
	`•r°p
();

858 
	`•r°x
();

859 
	`°ifbs
();

860 
	`°iff
();

861 
	`°€rm
();

862 
	`svbksb
();

863 
	`svdcmp
();

864 
	`svdfô
();

865 
	`svdv¨
();

866 
	`t€∂z
();

867 
	`çã°
();

868 
	`tqli
();

869 
	`å≠zd
();

870 
	`åed2
();

871 
	`åidag
();

872 
	`ånc°
();

873 
	`ån•t
();

874 
	`âe°
();

875 
	`tuã°
();

876 
	`twof·
();

877 
	`v™dî
();

878 
	`vegas
();

879 
	`vﬁåa
();

880 
	`wt1
();

881 
	`wä
();

882 
	`wwghts
();

883 
	`zbøc
();

884 
	`zbøk
();

885 
	`zbª¡
();

886 
	`zrhqr
();

887 
	`zriddr
();

888 
	`zroŸs
();

	@nrutil.c

1 #i‡
deföed
(
__STDC__
Ë|| deföed(
ANSI
Ë|| deföed(
NRANSI
)

3 
	~<°dio.h
>

4 
	~<°ddef.h
>

5 
	~<°dlib.h
>

6 
	#NR_END
 1

	)

7 
	#FREE_ARG
 *

	)

9 
	$ƒîr‹
(
îr‹_ãxt
[])

12 
	`Ârötf
(
°dîr
,"Numerical RecipesÑun-timeÉrror...\n");

13 
	`Ârötf
(
°dîr
,"%s\n",
îr‹_ãxt
);

14 
	`Ârötf
(
°dîr
,"...nowÉxitingÅo system...\n");

15 
	`exô
(1);

16 
	}
}

18 *
	$ve˘‹
(
∆
, 
nh
)

21 *
v
;

23 
v
=(*)
	`mÆloc
((
size_t
Ë((
nh
-
∆
+1+
NR_END
)*()));

24 i‡(!
v
Ë
	`ƒîr‹
("allocation failure in vector()");

25  
v
-
∆
+
NR_END
;

26 
	}
}

28 *
	$ive˘‹
(
∆
, 
nh
)

31 *
v
;

33 
v
=(*)
	`mÆloc
((
size_t
Ë((
nh
-
∆
+1+
NR_END
)*()));

34 i‡(!
v
Ë
	`ƒîr‹
("allocation failure in ivector()");

35  
v
-
∆
+
NR_END
;

36 
	}
}

38 *
	$cve˘‹
(
∆
, 
nh
)

41 *
v
;

43 
v
=(*)
	`mÆloc
((
size_t
Ë((
nh
-
∆
+1+
NR_END
)*()));

44 i‡(!
v
Ë
	`ƒîr‹
("allocation failure in cvector()");

45  
v
-
∆
+
NR_END
;

46 
	}
}

48 *
	$lve˘‹
(
∆
, 
nh
)

51 *
v
;

53 
v
=(*)
	`mÆloc
((
size_t
Ë((
nh
-
∆
+1+
NR_END
)*()));

54 i‡(!
v
Ë
	`ƒîr‹
("allocation failure inÜvector()");

55  
v
-
∆
+
NR_END
;

56 
	}
}

58 *
	$dve˘‹
(
∆
, 
nh
)

61 *
v
;

63 
v
=(*)
	`mÆloc
((
size_t
Ë((
nh
-
∆
+1+
NR_END
)*()));

64 i‡(!
v
Ë
	`ƒîr‹
("allocation failure in dvector()");

65  
v
-
∆
+
NR_END
;

66 
	}
}

68 **
	$m©rix
(
ƒl
, 
ƒh
, 
n˛
, 
nch
)

71 
i
, 
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1;

72 **
m
;

75 
m
=(**Ë
	`mÆloc
((
size_t
)((
ƒow
+
NR_END
)*(*)));

76 i‡(!
m
Ë
	`ƒîr‹
("allocation failure 1 in matrix()");

77 
m
 +
NR_END
;

78 
m
 -
ƒl
;

81 
m
[
ƒl
]=(*Ë
	`mÆloc
((
size_t
)((
ƒow
*
ncﬁ
+
NR_END
)*()));

82 i‡(!
m
[
ƒl
]Ë
	`ƒîr‹
("allocation failure 2 in matrix()");

83 
m
[
ƒl
] +
NR_END
;

84 
m
[
ƒl
] -
n˛
;

86 
i
=
ƒl
+1;i<=
ƒh
;i++Ë
m
[i]=m[i-1]+
ncﬁ
;

89  
m
;

90 
	}
}

92 **
	$dm©rix
(
ƒl
, 
ƒh
, 
n˛
, 
nch
)

95 
i
, 
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1;

96 **
m
;

99 
m
=(**Ë
	`mÆloc
((
size_t
)((
ƒow
+
NR_END
)*(*)));

100 i‡(!
m
Ë
	`ƒîr‹
("allocation failure 1 in matrix()");

101 
m
 +
NR_END
;

102 
m
 -
ƒl
;

105 
m
[
ƒl
]=(*Ë
	`mÆloc
((
size_t
)((
ƒow
*
ncﬁ
+
NR_END
)*()));

106 i‡(!
m
[
ƒl
]Ë
	`ƒîr‹
("allocation failure 2 in matrix()");

107 
m
[
ƒl
] +
NR_END
;

108 
m
[
ƒl
] -
n˛
;

110 
i
=
ƒl
+1;i<=
ƒh
;i++Ë
m
[i]=m[i-1]+
ncﬁ
;

113  
m
;

114 
	}
}

116 **
	$im©rix
(
ƒl
, 
ƒh
, 
n˛
, 
nch
)

119 
i
, 
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1;

120 **
m
;

123 
m
=(**Ë
	`mÆloc
((
size_t
)((
ƒow
+
NR_END
)*(*)));

124 i‡(!
m
Ë
	`ƒîr‹
("allocation failure 1 in matrix()");

125 
m
 +
NR_END
;

126 
m
 -
ƒl
;

130 
m
[
ƒl
]=(*Ë
	`mÆloc
((
size_t
)((
ƒow
*
ncﬁ
+
NR_END
)*()));

131 i‡(!
m
[
ƒl
]Ë
	`ƒîr‹
("allocation failure 2 in matrix()");

132 
m
[
ƒl
] +
NR_END
;

133 
m
[
ƒl
] -
n˛
;

135 
i
=
ƒl
+1;i<=
ƒh
;i++Ë
m
[i]=m[i-1]+
ncﬁ
;

138  
m
;

139 
	}
}

141 **
	$subm©rix
(**
a
, 
ﬁdæ
, 
ﬁdrh
, 
ﬁd˛
, 
ﬁdch
,

142 
√wæ
, 
√w˛
)

145 
i
,
j
,
ƒow
=
ﬁdrh
-
ﬁdæ
+1,
ncﬁ
=
ﬁd˛
-
√w˛
;

146 **
m
;

149 
m
=(**Ë
	`mÆloc
((
size_t
Ë((
ƒow
+
NR_END
)*(*)));

150 i‡(!
m
Ë
	`ƒîr‹
("allocation failure in submatrix()");

151 
m
 +
NR_END
;

152 
m
 -
√wæ
;

155 
i
=
ﬁdæ
,
j
=
√wæ
;i<=
ﬁdrh
;i++,j++Ë
m
[j]=
a
[i]+
ncﬁ
;

158  
m
;

159 
	}
}

161 **
	$c⁄vît_m©rix
(*
a
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
)

167 
i
,
j
,
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1;

168 **
m
;

171 
m
=(**Ë
	`mÆloc
((
size_t
Ë((
ƒow
+
NR_END
)*(*)));

172 i‡(!
m
Ë
	`ƒîr‹
("allocation failure in convert_matrix()");

173 
m
 +
NR_END
;

174 
m
 -
ƒl
;

177 
m
[
ƒl
]=
a
-
n˛
;

178 
i
=1,
j
=
ƒl
+1;i<
ƒow
;i++,j++Ë
m
[j]=m[j-1]+
ncﬁ
;

180  
m
;

181 
	}
}

183 ***
	$f3ãns‹
(
ƒl
, 
ƒh
, 
n˛
, 
nch
, 
ndl
, 
ndh
)

186 
i
,
j
,
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1,
ndï
=
ndh
-
ndl
+1;

187 ***
t
;

190 
t
=(***Ë
	`mÆloc
((
size_t
)((
ƒow
+
NR_END
)*(**)));

191 i‡(!
t
Ë
	`ƒîr‹
("allocation failure 1 in f3tensor()");

192 
t
 +
NR_END
;

193 
t
 -
ƒl
;

196 
t
[
ƒl
]=(**Ë
	`mÆloc
((
size_t
)((
ƒow
*
ncﬁ
+
NR_END
)*(*)));

197 i‡(!
t
[
ƒl
]Ë
	`ƒîr‹
("allocation failure 2 in f3tensor()");

198 
t
[
ƒl
] +
NR_END
;

199 
t
[
ƒl
] -
n˛
;

202 
t
[
ƒl
][
n˛
]=(*Ë
	`mÆloc
((
size_t
)((
ƒow
*
ncﬁ
*
ndï
+
NR_END
)*()));

203 i‡(!
t
[
ƒl
][
n˛
]Ë
	`ƒîr‹
("allocation failure 3 in f3tensor()");

204 
t
[
ƒl
][
n˛
] +
NR_END
;

205 
t
[
ƒl
][
n˛
] -
ndl
;

207 
j
=
n˛
+1;j<=
nch
;j++Ë
t
[
ƒl
][j]Ò[ƒl][j-1]+
ndï
;

208 
i
=
ƒl
+1;i<=
ƒh
;i++) {

209 
t
[
i
]Ò[i-1]+
ncﬁ
;

210 
t
[
i
][
n˛
]Ò[i-1][n˛]+
ncﬁ
*
ndï
;

211 
j
=
n˛
+1;j<=
nch
;j++Ë
t
[
i
][j]Ò[i][j-1]+
ndï
;

215  
t
;

216 
	}
}

218 
	$‰ì_ve˘‹
(*
v
, 
∆
, 
nh
)

221 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

222 
	}
}

224 
	$‰ì_ive˘‹
(*
v
, 
∆
, 
nh
)

227 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

228 
	}
}

230 
	$‰ì_cve˘‹
(*
v
, 
∆
, 
nh
)

233 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

234 
	}
}

236 
	$‰ì_lve˘‹
(*
v
, 
∆
, 
nh
)

239 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

240 
	}
}

242 
	$‰ì_dve˘‹
(*
v
, 
∆
, 
nh
)

245 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

246 
	}
}

248 
	$‰ì_m©rix
(**
m
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
)

251 
	`‰ì
((
FREE_ARG
Ë(
m
[
ƒl
]+
n˛
-
NR_END
));

252 
	`‰ì
((
FREE_ARG
Ë(
m
+
ƒl
-
NR_END
));

253 
	}
}

255 
	$‰ì_dm©rix
(**
m
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
)

258 
	`‰ì
((
FREE_ARG
Ë(
m
[
ƒl
]+
n˛
-
NR_END
));

259 
	`‰ì
((
FREE_ARG
Ë(
m
+
ƒl
-
NR_END
));

260 
	}
}

262 
	$‰ì_im©rix
(**
m
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
)

265 
	`‰ì
((
FREE_ARG
Ë(
m
[
ƒl
]+
n˛
-
NR_END
));

266 
	`‰ì
((
FREE_ARG
Ë(
m
+
ƒl
-
NR_END
));

267 
	}
}

269 
	$‰ì_subm©rix
(**
b
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
)

272 
	`‰ì
((
FREE_ARG
Ë(
b
+
ƒl
-
NR_END
));

273 
	}
}

275 
	$‰ì_c⁄vît_m©rix
(**
b
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
)

278 
	`‰ì
((
FREE_ARG
Ë(
b
+
ƒl
-
NR_END
));

279 
	}
}

281 
	$‰ì_f3ãns‹
(***
t
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
,

282 
ndl
, 
ndh
)

285 
	`‰ì
((
FREE_ARG
Ë(
t
[
ƒl
][
n˛
]+
ndl
-
NR_END
));

286 
	`‰ì
((
FREE_ARG
Ë(
t
[
ƒl
]+
n˛
-
NR_END
));

287 
	`‰ì
((
FREE_ARG
Ë(
t
+
ƒl
-
NR_END
));

288 
	}
}

293 
	~<°dio.h
>

294 
	#NR_END
 1

	)

295 
	#FREE_ARG
 *

	)

297 
	$ƒîr‹
(
îr‹_ãxt
)

298 
îr‹_ãxt
[];

301 
	`exô
();

303 
	`Ârötf
(
°dîr
,"Numerical RecipesÑun-timeÉrror...\n");

304 
	`Ârötf
(
°dîr
,"%s\n",
îr‹_ãxt
);

305 
	`Ârötf
(
°dîr
,"...nowÉxitingÅo system...\n");

306 
	`exô
(1);

307 
	}
}

309 *
	$ve˘‹
(
∆
,
nh
)

310 
nh
,
∆
;

313 *
v
;

315 
v
=(*)
	`mÆloc
((Ë((
nh
-
∆
+1+
NR_END
)*()));

316 i‡(!
v
Ë
	`ƒîr‹
("allocation failure in vector()");

317  
v
-
∆
+
NR_END
;

318 
	}
}

320 *
	$ive˘‹
(
∆
,
nh
)

321 
nh
,
∆
;

324 *
v
;

326 
v
=(*)
	`mÆloc
((Ë((
nh
-
∆
+1+
NR_END
)*()));

327 i‡(!
v
Ë
	`ƒîr‹
("allocation failure in ivector()");

328  
v
-
∆
+
NR_END
;

329 
	}
}

331 *
	$cve˘‹
(
∆
,
nh
)

332 
nh
,
∆
;

335 *
v
;

337 
v
=(*)
	`mÆloc
((Ë((
nh
-
∆
+1+
NR_END
)*()));

338 i‡(!
v
Ë
	`ƒîr‹
("allocation failure in cvector()");

339  
v
-
∆
+
NR_END
;

340 
	}
}

342 *
	$lve˘‹
(
∆
,
nh
)

343 
nh
,
∆
;

346 *
v
;

348 
v
=(*)
	`mÆloc
((Ë((
nh
-
∆
+1+
NR_END
)*()));

349 i‡(!
v
Ë
	`ƒîr‹
("allocation failure inÜvector()");

350  
v
-
∆
+
NR_END
;

351 
	}
}

353 *
	$dve˘‹
(
∆
,
nh
)

354 
nh
,
∆
;

357 *
v
;

359 
v
=(*)
	`mÆloc
((Ë((
nh
-
∆
+1+
NR_END
)*()));

360 i‡(!
v
Ë
	`ƒîr‹
("allocation failure in dvector()");

361  
v
-
∆
+
NR_END
;

362 
	}
}

364 **
	$m©rix
(
ƒl
,
ƒh
,
n˛
,
nch
)

365 
nch
,
n˛
,
ƒh
,
ƒl
;

368 
i
, 
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1;

369 **
m
;

372 
m
=(**Ë
	`mÆloc
(()((
ƒow
+
NR_END
)*(*)));

373 i‡(!
m
Ë
	`ƒîr‹
("allocation failure 1 in matrix()");

374 
m
 +
NR_END
;

375 
m
 -
ƒl
;

378 
m
[
ƒl
]=(*Ë
	`mÆloc
(()((
ƒow
*
ncﬁ
+
NR_END
)*()));

379 i‡(!
m
[
ƒl
]Ë
	`ƒîr‹
("allocation failure 2 in matrix()");

380 
m
[
ƒl
] +
NR_END
;

381 
m
[
ƒl
] -
n˛
;

383 
i
=
ƒl
+1;i<=
ƒh
;i++Ë
m
[i]=m[i-1]+
ncﬁ
;

386  
m
;

387 
	}
}

389 **
	$dm©rix
(
ƒl
,
ƒh
,
n˛
,
nch
)

390 
nch
,
n˛
,
ƒh
,
ƒl
;

393 
i
, 
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1;

394 **
m
;

397 
m
=(**Ë
	`mÆloc
(()((
ƒow
+
NR_END
)*(*)));

398 i‡(!
m
Ë
	`ƒîr‹
("allocation failure 1 in matrix()");

399 
m
 +
NR_END
;

400 
m
 -
ƒl
;

403 
m
[
ƒl
]=(*Ë
	`mÆloc
(()((
ƒow
*
ncﬁ
+
NR_END
)*()));

404 i‡(!
m
[
ƒl
]Ë
	`ƒîr‹
("allocation failure 2 in matrix()");

405 
m
[
ƒl
] +
NR_END
;

406 
m
[
ƒl
] -
n˛
;

408 
i
=
ƒl
+1;i<=
ƒh
;i++Ë
m
[i]=m[i-1]+
ncﬁ
;

411  
m
;

412 
	}
}

414 **
	$im©rix
(
ƒl
,
ƒh
,
n˛
,
nch
)

415 
nch
,
n˛
,
ƒh
,
ƒl
;

418 
i
, 
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1;

419 **
m
;

422 
m
=(**Ë
	`mÆloc
(()((
ƒow
+
NR_END
)*(*)));

423 i‡(!
m
Ë
	`ƒîr‹
("allocation failure 1 in matrix()");

424 
m
 +
NR_END
;

425 
m
 -
ƒl
;

429 
m
[
ƒl
]=(*Ë
	`mÆloc
(()((
ƒow
*
ncﬁ
+
NR_END
)*()));

430 i‡(!
m
[
ƒl
]Ë
	`ƒîr‹
("allocation failure 2 in matrix()");

431 
m
[
ƒl
] +
NR_END
;

432 
m
[
ƒl
] -
n˛
;

434 
i
=
ƒl
+1;i<=
ƒh
;i++Ë
m
[i]=m[i-1]+
ncﬁ
;

437  
m
;

438 
	}
}

440 **
	$subm©rix
(
a
,
ﬁdæ
,
ﬁdrh
,
ﬁd˛
,
ﬁdch
,
√wæ
,
√w˛
)

441 **
a
;

442 
√w˛
,
√wæ
,
ﬁdch
,
ﬁd˛
,
ﬁdrh
,
ﬁdæ
;

445 
i
,
j
,
ƒow
=
ﬁdrh
-
ﬁdæ
+1,
ncﬁ
=
ﬁd˛
-
√w˛
;

446 **
m
;

449 
m
=(**Ë
	`mÆloc
((Ë((
ƒow
+
NR_END
)*(*)));

450 i‡(!
m
Ë
	`ƒîr‹
("allocation failure in submatrix()");

451 
m
 +
NR_END
;

452 
m
 -
√wæ
;

455 
i
=
ﬁdæ
,
j
=
√wæ
;i<=
ﬁdrh
;i++,j++Ë
m
[j]=
a
[i]+
ncﬁ
;

458  
m
;

459 
	}
}

461 **
	$c⁄vît_m©rix
(
a
,
ƒl
,
ƒh
,
n˛
,
nch
)

462 *
a
;

463 
nch
,
n˛
,
ƒh
,
ƒl
;

469 
i
,
j
,
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1;

470 **
m
;

473 
m
=(**Ë
	`mÆloc
((Ë((
ƒow
+
NR_END
)*(*)));

474 i‡(!
m
Ë
	`ƒîr‹
("allocation failure in convert_matrix()");

475 
m
 +
NR_END
;

476 
m
 -
ƒl
;

479 
m
[
ƒl
]=
a
-
n˛
;

480 
i
=1,
j
=
ƒl
+1;i<
ƒow
;i++,j++Ë
m
[j]=m[j-1]+
ncﬁ
;

482  
m
;

483 
	}
}

485 ***
	$f3ãns‹
(
ƒl
,
ƒh
,
n˛
,
nch
,
ndl
,
ndh
)

486 
nch
,
n˛
,
ndh
,
ndl
,
ƒh
,
ƒl
;

489 
i
,
j
,
ƒow
=
ƒh
-
ƒl
+1,
ncﬁ
=
nch
-
n˛
+1,
ndï
=
ndh
-
ndl
+1;

490 ***
t
;

493 
t
=(***Ë
	`mÆloc
(()((
ƒow
+
NR_END
)*(**)));

494 i‡(!
t
Ë
	`ƒîr‹
("allocation failure 1 in f3tensor()");

495 
t
 +
NR_END
;

496 
t
 -
ƒl
;

499 
t
[
ƒl
]=(**Ë
	`mÆloc
(()((
ƒow
*
ncﬁ
+
NR_END
)*(*)));

500 i‡(!
t
[
ƒl
]Ë
	`ƒîr‹
("allocation failure 2 in f3tensor()");

501 
t
[
ƒl
] +
NR_END
;

502 
t
[
ƒl
] -
n˛
;

505 
t
[
ƒl
][
n˛
]=(*Ë
	`mÆloc
(()((
ƒow
*
ncﬁ
*
ndï
+
NR_END
)*()));

506 i‡(!
t
[
ƒl
][
n˛
]Ë
	`ƒîr‹
("allocation failure 3 in f3tensor()");

507 
t
[
ƒl
][
n˛
] +
NR_END
;

508 
t
[
ƒl
][
n˛
] -
ndl
;

510 
j
=
n˛
+1;j<=
nch
;j++Ë
t
[
ƒl
][j]Ò[ƒl][j-1]+
ndï
;

511 
i
=
ƒl
+1;i<=
ƒh
;i++) {

512 
t
[
i
]Ò[i-1]+
ncﬁ
;

513 
t
[
i
][
n˛
]Ò[i-1][n˛]+
ncﬁ
*
ndï
;

514 
j
=
n˛
+1;j<=
nch
;j++Ë
t
[
i
][j]Ò[i][j-1]+
ndï
;

518  
t
;

519 
	}
}

521 
	$‰ì_ve˘‹
(
v
,
∆
,
nh
)

522 *
v
;

523 
nh
,
∆
;

526 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

527 
	}
}

529 
	$‰ì_ive˘‹
(
v
,
∆
,
nh
)

530 *
v
;

531 
nh
,
∆
;

534 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

535 
	}
}

537 
	$‰ì_cve˘‹
(
v
,
∆
,
nh
)

538 
nh
,
∆
;

539 *
v
;

542 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

543 
	}
}

545 
	$‰ì_lve˘‹
(
v
,
∆
,
nh
)

546 
nh
,
∆
;

547 *
v
;

550 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

551 
	}
}

553 
	$‰ì_dve˘‹
(
v
,
∆
,
nh
)

554 *
v
;

555 
nh
,
∆
;

558 
	`‰ì
((
FREE_ARG
Ë(
v
+
∆
-
NR_END
));

559 
	}
}

561 
	$‰ì_m©rix
(
m
,
ƒl
,
ƒh
,
n˛
,
nch
)

562 **
m
;

563 
nch
,
n˛
,
ƒh
,
ƒl
;

566 
	`‰ì
((
FREE_ARG
Ë(
m
[
ƒl
]+
n˛
-
NR_END
));

567 
	`‰ì
((
FREE_ARG
Ë(
m
+
ƒl
-
NR_END
));

568 
	}
}

570 
	$‰ì_dm©rix
(
m
,
ƒl
,
ƒh
,
n˛
,
nch
)

571 **
m
;

572 
nch
,
n˛
,
ƒh
,
ƒl
;

575 
	`‰ì
((
FREE_ARG
Ë(
m
[
ƒl
]+
n˛
-
NR_END
));

576 
	`‰ì
((
FREE_ARG
Ë(
m
+
ƒl
-
NR_END
));

577 
	}
}

579 
	$‰ì_im©rix
(
m
,
ƒl
,
ƒh
,
n˛
,
nch
)

580 **
m
;

581 
nch
,
n˛
,
ƒh
,
ƒl
;

584 
	`‰ì
((
FREE_ARG
Ë(
m
[
ƒl
]+
n˛
-
NR_END
));

585 
	`‰ì
((
FREE_ARG
Ë(
m
+
ƒl
-
NR_END
));

586 
	}
}

588 
	$‰ì_subm©rix
(
b
,
ƒl
,
ƒh
,
n˛
,
nch
)

589 **
b
;

590 
nch
,
n˛
,
ƒh
,
ƒl
;

593 
	`‰ì
((
FREE_ARG
Ë(
b
+
ƒl
-
NR_END
));

594 
	}
}

596 
	$‰ì_c⁄vît_m©rix
(
b
,
ƒl
,
ƒh
,
n˛
,
nch
)

597 **
b
;

598 
nch
,
n˛
,
ƒh
,
ƒl
;

601 
	`‰ì
((
FREE_ARG
Ë(
b
+
ƒl
-
NR_END
));

602 
	}
}

604 
	$‰ì_f3ãns‹
(
t
,
ƒl
,
ƒh
,
n˛
,
nch
,
ndl
,
ndh
)

605 ***
t
;

606 
nch
,
n˛
,
ndh
,
ndl
,
ƒh
,
ƒl
;

609 
	`‰ì
((
FREE_ARG
Ë(
t
[
ƒl
][
n˛
]+
ndl
-
NR_END
));

610 
	`‰ì
((
FREE_ARG
Ë(
t
[
ƒl
]+
n˛
-
NR_END
));

611 
	`‰ì
((
FREE_ARG
Ë(
t
+
ƒl
-
NR_END
));

612 
	}
}

	@nrutil.h

1 #i‚de‡
_NR_UTILS_H_


2 
	#_NR_UTILS_H_


	)

4 
	gsqørg
;

5 
	#SQR
(
a
Ë((
sqørg
=◊)Ë=0.0 ? 0.0 : sqørg*sqørg)

	)

7 
	gdsqørg
;

8 
	#DSQR
(
a
Ë((
dsqørg
=◊)Ë=0.0 ? 0.0 : dsqørg*dsqørg)

	)

10 
	gdmax¨g1
,
	gdmax¨g2
;

11 
	#DMAX
(
a
,
b
Ë(
dmax¨g1
=◊),
dmax¨g2
=(b),(dmax¨g1Ë> (dmax¨g2Ë?\

	)

12 (
	gdmax¨g1
Ë: (
dmax¨g2
))

14 
dmö¨g1
,
	gdmö¨g2
;

15 
	#DMIN
(
a
,
b
Ë(
dmö¨g1
=◊),
dmö¨g2
=(b),(dmö¨g1Ë< (dmö¨g2Ë?\

	)

16 (
	gdmö¨g1
Ë: (
dmö¨g2
))

18 
max¨g1
,
	gmax¨g2
;

19 
	#FMAX
(
a
,
b
Ë(
max¨g1
=◊),
max¨g2
=(b),(max¨g1Ë> (max¨g2Ë?\

	)

20 (
	gmax¨g1
Ë: (
max¨g2
))

22 
mö¨g1
,
	gmö¨g2
;

23 
	#FMIN
(
a
,
b
Ë(
mö¨g1
=◊),
mö¨g2
=(b),(mö¨g1Ë< (mö¨g2Ë?\

	)

24 (
	gmö¨g1
Ë: (
mö¨g2
))

26 
lmax¨g1
,
	glmax¨g2
;

27 
	#LMAX
(
a
,
b
Ë(
lmax¨g1
=◊),
lmax¨g2
=(b),÷max¨g1Ë> (lmax¨g2Ë?\

	)

28 (
	glmax¨g1
Ë: (
lmax¨g2
))

30 
lmö¨g1
,
	glmö¨g2
;

31 
	#LMIN
(
a
,
b
Ë(
lmö¨g1
=◊),
lmö¨g2
=(b),÷mö¨g1Ë< (lmö¨g2Ë?\

	)

32 (
	glmö¨g1
Ë: (
lmö¨g2
))

34 
imax¨g1
,
	gimax¨g2
;

35 
	#IMAX
(
a
,
b
Ë(
imax¨g1
=◊),
imax¨g2
=(b),(imax¨g1Ë> (imax¨g2Ë?\

	)

36 (
	gimax¨g1
Ë: (
imax¨g2
))

38 
imö¨g1
,
	gimö¨g2
;

39 
	#IMIN
(
a
,
b
Ë(
imö¨g1
=◊),
imö¨g2
=(b),(imö¨g1Ë< (imö¨g2Ë?\

	)

40 (
	gimö¨g1
Ë: (
imö¨g2
))

42 
	#SIGN
(
a
,
b
Ë((bË>0.0 ? 
	`Ábs
◊Ë: -Ábs◊))

	)

44 #i‡
deföed
(
__STDC__
Ë|| deföed(
ANSI
Ë|| deföed(
NRANSI
)

46 
ƒîr‹
(
îr‹_ãxt
[]);

47 *
ve˘‹
(
∆
, 
nh
);

48 *
ive˘‹
(
∆
, 
nh
);

49 *
cve˘‹
(
∆
, 
nh
);

50 *
lve˘‹
(
∆
, 
nh
);

51 *
dve˘‹
(
∆
, 
nh
);

52 **
m©rix
(
ƒl
, 
ƒh
, 
n˛
, 
nch
);

53 **
dm©rix
(
ƒl
, 
ƒh
, 
n˛
, 
nch
);

54 **
im©rix
(
ƒl
, 
ƒh
, 
n˛
, 
nch
);

55 **
subm©rix
(**
a
, 
ﬁdæ
, 
ﬁdrh
, 
ﬁd˛
, 
ﬁdch
,

56 
√wæ
, 
√w˛
);

57 **
c⁄vît_m©rix
(*
a
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
);

58 ***
f3ãns‹
(
ƒl
, 
ƒh
, 
n˛
, 
nch
, 
ndl
, 
ndh
);

59 
‰ì_ve˘‹
(*
v
, 
∆
, 
nh
);

60 
‰ì_ive˘‹
(*
v
, 
∆
, 
nh
);

61 
‰ì_cve˘‹
(*
v
, 
∆
, 
nh
);

62 
‰ì_lve˘‹
(*
v
, 
∆
, 
nh
);

63 
‰ì_dve˘‹
(*
v
, 
∆
, 
nh
);

64 
‰ì_m©rix
(**
m
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
);

65 
‰ì_dm©rix
(**
m
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
);

66 
‰ì_im©rix
(**
m
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
);

67 
‰ì_subm©rix
(**
b
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
);

68 
‰ì_c⁄vît_m©rix
(**
b
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
);

69 
‰ì_f3ãns‹
(***
t
, 
ƒl
, 
ƒh
, 
n˛
, 
nch
,

70 
ndl
, 
ndh
);

75 
ƒîr‹
();

76 *
ve˘‹
();

77 **
m©rix
();

78 **
subm©rix
();

79 **
c⁄vît_m©rix
();

80 ***
f3ãns‹
();

81 *
dve˘‹
();

82 **
dm©rix
();

83 *
ive˘‹
();

84 **
im©rix
();

85 *
cve˘‹
();

86 *
lve˘‹
();

87 
‰ì_ve˘‹
();

88 
‰ì_dve˘‹
();

89 
‰ì_ive˘‹
();

90 
‰ì_cve˘‹
();

91 
‰ì_lve˘‹
();

92 
‰ì_m©rix
();

93 
‰ì_subm©rix
();

94 
‰ì_c⁄vît_m©rix
();

95 
‰ì_dm©rix
();

96 
‰ì_im©rix
();

97 
‰ì_f3ãns‹
();

	@rtbis.c

2 
	~<m©h.h
>

3 
	#JMAX
 40

	)

5 
	$πbis
((*
func
)(), 
x1
, 
x2
, 
xacc
)

7 
	`ƒîr‹
(
îr‹_ãxt
[]);

8 
j
;

9 
dx
,
f
,
fmid
,
xmid
,
πb
;

11 
f
=(*
func
)(
x1
);

12 
fmid
=(*
func
)(
x2
);

13 i‡(
f
*
fmid
 >0.0Ë
	`ƒîr‹
("Root must be bracketed for bisection inÑtbis");

14 
πb
 = 
f
 < 0.0 ? (
dx
=
x2
-
x1
,x1) : (dx=x1-x2,x2);

15 
j
=1;j<=
JMAX
;j++) {

16 
fmid
=(*
func
)(
xmid
=
πb
+(
dx
 *= 0.5));

17 i‡(
fmid
 <0.0Ë
πb
=
xmid
;

18 i‡(
	`Ábs
(
dx
Ë< 
xacc
 || 
fmid
 =0.0Ë 
πb
;

20 
	`ƒîr‹
("Too many bisections inÑtbis");

22 
	}
}

23 #unde‡
JMAX


	@rtflsp.c

2 
	~<m©h.h
>

3 
	#MAXIT
 30

	)

5 
	$πÊ•
((*
func
)(), 
x1
, 
x2
, 
xacc
)

7 
	`ƒîr‹
(
îr‹_ãxt
[]);

8 
j
;

9 
Ê
,
fh
,
xl
,
xh
,
sw≠
,
dx
,
dñ
,
f
,
πf
;

11 
Ê
=(*
func
)(
x1
);

12 
fh
=(*
func
)(
x2
);

13 i‡(
Ê
*
fh
 > 0.0Ë
	`ƒîr‹
("Root must be bracketed inÑtflsp");

14 i‡(
Ê
 < 0.0) {

15 
xl
=
x1
;

16 
xh
=
x2
;

18 
xl
=
x2
;

19 
xh
=
x1
;

20 
sw≠
=
Ê
;

21 
Ê
=
fh
;

22 
fh
=
sw≠
;

24 
dx
=
xh
-
xl
;

25 
j
=1;j<=
MAXIT
;j++) {

26 
πf
=
xl
+
dx
*
Ê
/(Ê-
fh
);

27 
f
=(*
func
)(
πf
);

28 i‡(
f
 < 0.0) {

29 
dñ
=
xl
-
πf
;

30 
xl
=
πf
;

31 
Ê
=
f
;

33 
dñ
=
xh
-
πf
;

34 
xh
=
πf
;

35 
fh
=
f
;

37 
dx
=
xh
-
xl
;

38 i‡(
	`Ábs
(
dñ
Ë< 
xacc
 || 
f
 =0.0Ë 
πf
;

40 
	`ƒîr‹
("MaximumÇumber of iterationsÉxceeded inÑtflsp");

42 
	}
}

43 #unde‡
MAXIT


	@rtmuller.c

2 
	~<m©h.h
>

3 
	#MAXIT
 30

	)

6 
	$£t_muŒî_a
 ((*
func
)(), 
p0
, 
p1
, 
p2
) {

7 
Â0
 = (*
func
)(
p0
), 
Â1
 = (*func)(
p1
), 
Â2
 = (*func)(
p2
);

8 
a
 = ((
p1
-
p2
)*(
Â0
-
Â2
)-(
p0
-p2)*(
Â1
-fp2)) / (p0-p2)*(p1-p2)*(p0-p1);

9  
a
;

10 
	}
}

12 
	$£t_muŒî_b
 ((*
func
)(), 
p0
, 
p1
, 
p2
) {

13 
Â0
 = (*
func
)(
p0
), 
Â1
 = (*func)(
p1
), 
Â2
 = (*func)(
p2
);

14 
b
 = ((
p0
-
p2
)*’0-p2)*(
Â1
-
Â2
)-(
p1
-p2)*’1-p2)*(
Â0
-fp2)) / (p0-p2)*(p1-p2)*(p0-p1);

15  
b
;

16 
	}
}

18 
	$πmuŒî
((*
func
)(), 
x1
, 
x2
, 
xacc
)

20 
	`ƒîr‹
(
îr‹_ãxt
[]);

21 
j
;

22 
Ê
,
fh
,
xl
,
xh
,
f
,
πf
, 
dx
, 
xm
, 
fm
, 
a
, 
b
, 
c
;

24 
xl
 = 
x1
;

25 
xm
 = (
x1
+
x2
)/2.0;

26 
xh
 = 
x2
;

27 
Ê
=(*
func
)(
x1
);

28 
fm
 = (*
func
)(
xm
);

29 
fh
=(*
func
)(
x2
);

31 
j
=1;j<=
MAXIT
;j++) {

32 
c
 = 
fh
;

33 
b
 = 
	`£t_muŒî_b
((*
func
), 
xl
, 
xm
, 
xh
);

34 
a
 = 
	`£t_muŒî_a
((*
func
), 
xl
, 
xm
, 
xh
);

35 
dx
 = (
b
 > 0Ë? -2*
c
/(b+
	`sqπ
(b*b-4*
a
*c)) : ( (b == 0 ) ? -2*c/(sqrt(-4*a*c)) : -2*c/(b-sqrt(b*b-4*a*c)) );

36 
πf
 = 
xh
 + 
dx
;

38 
	`¥ötf
("Bef‹ê->á : %êb : %ê¯: %êx»: %‡xm : %‡xh : %‡dx : %f\n", 
a
, 
b
, 
c
, 
xl
, 
xm
, 
xh
, 
dx
);

40 
f
 = (*
func
)(
πf
);

41 
xl
 = 
xm
;

42 
xm
 = 
xh
;

43 
xh
 = 
πf
;

45 
	`¥ötf
("A·î -> x»: %‡xm : %‡xh : %f\n", 
xl
, 
xm
, 
xh
);

46 i‡(
	`Ábs
(
dx
Ë< 
xacc
 || 
f
 == 0.0)

48 
	`¥ötf
("födÅhêroŸ %f\n", 
πf
);

49  
πf
;

52 
	`ƒîr‹
("MaximumÇumber of iterationsÉxceeded inÑtmuller");

54 
	}
}

55 #unde‡
MAXIT


	@rtnewt.c

2 
	~<m©h.h
>

3 
	#JMAX
 20

	)

5 
	$π√wt
((*
funcd
)(, *, *), 
x1
, 
x2
,

6 
xacc
)

8 
	`ƒîr‹
(
îr‹_ãxt
[]);

9 
j
;

10 
df
,
dx
,
f
,
πn
;

12 
πn
=0.5*(
x1
+
x2
);

13 
j
=1;j<=
JMAX
;j++) {

14 (*
funcd
)(
πn
,&
f
,&
df
);

15 
dx
=
f
/
df
;

16 
πn
 -
dx
;

17 i‡((
x1
-
πn
)*‘ä-
x2
) < 0.0)

18 
	`ƒîr‹
("Jumped out of brackets inÑtnewt");

19 i‡(
	`Ábs
(
dx
Ë< 
xacc
Ë 
πn
;

21 
	`ƒîr‹
("MaximumÇumber of iterationsÉxceeded inÑtnewt");

23 
	}
}

24 #unde‡
JMAX


	@rtsafe.c

2 
	~<m©h.h
>

3 
	#MAXIT
 100

	)

5 
	$πß„
((*
funcd
)(, *, *), 
x1
, 
x2
,

6 
xacc
)

8 
	`ƒîr‹
(
îr‹_ãxt
[]);

9 
j
;

10 
df
,
dx
,
dxﬁd
,
f
,
fh
,
Ê
;

11 
ãmp
,
xh
,
xl
,
πs
;

13 (*
funcd
)(
x1
,&
Ê
,&
df
);

14 (*
funcd
)(
x2
,&
fh
,&
df
);

15 i‡((
Ê
 > 0.0 && 
fh
 > 0.0) || (fl < 0.0 && fh < 0.0))

16 
	`ƒîr‹
("Root must be bracketed inÑtsafe");

17 i‡(
Ê
 =0.0Ë 
x1
;

18 i‡(
fh
 =0.0Ë 
x2
;

19 i‡(
Ê
 < 0.0) {

20 
xl
=
x1
;

21 
xh
=
x2
;

23 
xh
=
x1
;

24 
xl
=
x2
;

26 
πs
=0.5*(
x1
+
x2
);

27 
dxﬁd
=
	`Ábs
(
x2
-
x1
);

28 
dx
=
dxﬁd
;

29 (*
funcd
)(
πs
,&
f
,&
df
);

30 
j
=1;j<=
MAXIT
;j++) {

31 i‡((((
πs
-
xh
)*
df
-
f
)*(‘ts-
xl
)*df-f) > 0.0)

32 || (
	`Ábs
(2.0*
f
Ë> fabs(
dxﬁd
*
df
))) {

33 
dxﬁd
=
dx
;

34 
dx
=0.5*(
xh
-
xl
);

35 
πs
=
xl
+
dx
;

36 i‡(
xl
 =
πs
) Ñts;

38 
dxﬁd
=
dx
;

39 
dx
=
f
/
df
;

40 
ãmp
=
πs
;

41 
πs
 -
dx
;

42 i‡(
ãmp
 =
πs
) Ñts;

44 i‡(
	`Ábs
(
dx
Ë< 
xacc
Ë 
πs
;

45 (*
funcd
)(
πs
,&
f
,&
df
);

46 i‡(
f
 < 0.0)

47 
xl
=
πs
;

49 
xh
=
πs
;

51 
	`ƒîr‹
("MaximumÇumber of iterationsÉxceeded inÑtsafe");

53 
	}
}

54 #unde‡
MAXIT


	@rtsec.c

2 
	~<m©h.h
>

3 
	#MAXIT
 30

	)

5 
	$π£c
((*
func
)(), 
x1
, 
x2
, 
xacc
)

7 
	`ƒîr‹
(
îr‹_ãxt
[]);

8 
j
;

9 
Ê
,
f
,
dx
,
sw≠
,
xl
,
πs
;

11 
Ê
=(*
func
)(
x1
);

12 
f
=(*
func
)(
x2
);

13 i‡(
	`Ábs
(
Ê
Ë< fabs(
f
)) {

14 
πs
=
x1
;

15 
xl
=
x2
;

16 
sw≠
=
Ê
;

17 
Ê
=
f
;

18 
f
=
sw≠
;

20 
xl
=
x1
;

21 
πs
=
x2
;

23 
j
=1;j<=
MAXIT
;j++) {

24 
dx
=(
xl
-
πs
)*
f
/(f-
Ê
);

25 
xl
=
πs
;

26 
Ê
=
f
;

27 
πs
 +
dx
;

28 
f
=(*
func
)(
πs
);

29 i‡(
	`Ábs
(
dx
Ë< 
xacc
 || 
f
 =0.0Ë 
πs
;

31 
	`ƒîr‹
("MaximumÇumber of iterationsÉxceeded inÑtsec");

33 
	}
}

34 #unde‡
MAXIT


	@test.c

1 
	~<°dio.h
>

2 
	~"ƒ.h
"

3 
	~"ƒutû.h
"

4 
	~<m©h.h
>

6 
	$maö
 () {

7 
i
 = 0;

8 
	`¥ötf
("%f\n",
	`pow
(4,2)*2);

9 
	}
}

	@xrtbis.c

4 
	~<°dio.h
>

5 
	#NRANSI


	)

6 
	~"ƒ.h
"

7 
	~"ƒutû.h
"

9 
	#N
 100

	)

10 
	#NBMAX
 20

	)

11 
	#X1
 1.0

	)

12 
	#X2
 10.0

	)

14 
	$fx
(
x
)

16  
	`bessj0
(
x
);

17 
	}
}

19 
	$maö
()

21 
i
,
nb
=
NBMAX
;

22 
xacc
,
roŸ
,*
xb1
,*
xb2
;

24 
xb1
=
	`ve˘‹
(1,
NBMAX
);

25 
xb2
=
	`ve˘‹
(1,
NBMAX
);

26 
	`zbøk
(
fx
,
X1
,
X2
,
N
,
xb1
,
xb2
,&
nb
);

27 
	`¥ötf
("\nRoots of bessj0:\n");

28 
	`¥ötf
("%21s %15s\n","x","f(x)");

29 
i
=1;i<=
nb
;i++) {

30 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

31 
roŸ
=
	`πbis
(
fx
,
xb1
[
i
],
xb2
[i],
xacc
);

32 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

34 
	`‰ì_ve˘‹
(
xb2
,1,
NBMAX
);

35 
	`‰ì_ve˘‹
(
xb1
,1,
NBMAX
);

37 
	}
}

38 #unde‡
NRANSI


	@xrtflsp.c

4 
	~<°dio.h
>

5 
	#NRANSI


	)

6 
	~"ƒ.h
"

7 
	~"ƒutû.h
"

9 
	#N
 100

	)

10 
	#NBMAX
 20

	)

11 
	#X1
 1.0

	)

12 
	#X2
 50.0

	)

14 
	$fx
(
x
)

16  
	`bessj0
(
x
);

17 
	}
}

19 
	$maö
()

21 
i
,
nb
=
NBMAX
;

22 
xacc
,
roŸ
,*
xb1
,*
xb2
;

24 
xb1
=
	`ve˘‹
(1,
NBMAX
);

25 
xb2
=
	`ve˘‹
(1,
NBMAX
);

26 
	`zbøk
(
fx
,
X1
,
X2
,
N
,
xb1
,
xb2
,&
nb
);

27 
	`¥ötf
("\nRoots of bessj0:\n");

28 
	`¥ötf
("%21s %15s\n","x","f(x)");

29 
i
=1;i<=
nb
;i++) {

30 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

31 
roŸ
=
	`πÊ•
(
fx
,
xb1
[
i
],
xb2
[i],
xacc
);

32 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

34 
	`‰ì_ve˘‹
(
xb2
,1,
NBMAX
);

35 
	`‰ì_ve˘‹
(
xb1
,1,
NBMAX
);

37 
	}
}

38 #unde‡
NRANSI


	@xrtnewt.c

4 
	~<°dio.h
>

5 
	#NRANSI


	)

6 
	~"ƒ.h
"

7 
	~"ƒutû.h
"

9 
	#N
 100

	)

10 
	#NBMAX
 20

	)

11 
	#X1
 1.0

	)

12 
	#X2
 50.0

	)

14 
	$fx
(
x
)

16  
	`bessj0
(
x
);

17 
	}
}

19 
	$funcd
(
x
,*
‚
, *
df
)

21 *
‚
=
	`bessj0
(
x
);

22 *
df
 = -
	`bessj1
(
x
);

23 
	}
}

25 
	$maö
()

27 
i
,
nb
=
NBMAX
;

28 
xacc
,
roŸ
,*
xb1
,*
xb2
;

30 
xb1
=
	`ve˘‹
(1,
NBMAX
);

31 
xb2
=
	`ve˘‹
(1,
NBMAX
);

32 
	`zbøk
(
fx
,
X1
,
X2
,
N
,
xb1
,
xb2
,&
nb
);

33 
	`¥ötf
("\nRoots of bessj0:\n");

34 
	`¥ötf
("%21s %15s\n","x","f(x)");

35 
i
=1;i<=
nb
;i++) {

36 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

37 
roŸ
=
	`π√wt
(
funcd
,
xb1
[
i
],
xb2
[i],
xacc
);

38 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

40 
	`‰ì_ve˘‹
(
xb2
,1,
NBMAX
);

41 
	`‰ì_ve˘‹
(
xb1
,1,
NBMAX
);

43 
	}
}

44 #unde‡
NRANSI


	@xrtsafe.c

4 
	~<°dio.h
>

5 
	#NRANSI


	)

6 
	~"ƒ.h
"

7 
	~"ƒutû.h
"

9 
	#N
 100

	)

10 
	#NBMAX
 20

	)

11 
	#X1
 1.0

	)

12 
	#X2
 50.0

	)

14 
	$fx
(
x
)

16  
	`bessj0
(
x
);

17 
	}
}

19 
	$funcd
(
x
,*
‚
, *
df
)

21 *
‚
=
	`bessj0
(
x
);

22 *
df
 = -
	`bessj1
(
x
);

23 
	}
}

25 
	$maö
()

27 
i
,
nb
=
NBMAX
;

28 
xacc
,
roŸ
,*
xb1
,*
xb2
;

30 
xb1
=
	`ve˘‹
(1,
NBMAX
);

31 
xb2
=
	`ve˘‹
(1,
NBMAX
);

32 
	`zbøk
(
fx
,
X1
,
X2
,
N
,
xb1
,
xb2
,&
nb
);

33 
	`¥ötf
("\nRoots of bessj0:\n");

34 
	`¥ötf
("%21s %15s\n","x","f(x)");

35 
i
=1;i<=
nb
;i++) {

36 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

37 
roŸ
=
	`πß„
(
funcd
,
xb1
[
i
],
xb2
[i],
xacc
);

38 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

40 
	`‰ì_ve˘‹
(
xb2
,1,
NBMAX
);

41 
	`‰ì_ve˘‹
(
xb1
,1,
NBMAX
);

43 
	}
}

44 #unde‡
NRANSI


	@xrtsec.c

4 
	~<°dio.h
>

5 
	#NRANSI


	)

6 
	~"ƒ.h
"

7 
	~"ƒutû.h
"

9 
	#N
 100

	)

10 
	#NBMAX
 20

	)

11 
	#X1
 1.0

	)

12 
	#X2
 50.0

	)

14 
	$fx
(
x
)

16  
	`bessj0
(
x
);

17 
	}
}

19 
	$maö
()

21 
i
,
nb
=
NBMAX
;

22 
xacc
,
roŸ
,*
xb1
,*
xb2
;

24 
xb1
=
	`ve˘‹
(1,
NBMAX
);

25 
xb2
=
	`ve˘‹
(1,
NBMAX
);

26 
	`zbøk
(
fx
,
X1
,
X2
,
N
,
xb1
,
xb2
,&
nb
);

27 
	`¥ötf
("\nRoots of bessj0:\n");

28 
	`¥ötf
("%21s %15s\n","x","f(x)");

29 
i
=1;i<=
nb
;i++) {

30 
xacc
=(1.0e-6)*(
xb1
[
i
]+
xb2
[i])/2.0;

31 
roŸ
=
	`π£c
(
fx
,
xb1
[
i
],
xb2
[i],
xacc
);

32 
	`¥ötf
("roŸ %3d %14.6‡%14.6f\n",
i
,
roŸ
,
	`fx
(root));

34 
	`‰ì_ve˘‹
(
xb2
,1,
NBMAX
);

35 
	`‰ì_ve˘‹
(
xb1
,1,
NBMAX
);

37 
	}
}

38 #unde‡
NRANSI


	@xzbrak.c

4 
	~<°dio.h
>

5 
	#NRANSI


	)

6 
	~"ƒ.h
"

7 
	~"ƒutû.h
"

9 
	#N
 100

10 
	#NBMAX
 20

11 
	#X1
 1.0

	)

12 
	#X2
 10.0

	)

14 
	$fx
(
x
)

16  
	`bessj0
(
x
);

17 
	}
}

19 
	$maö
()

21 
i
,
nb
=
NBMAX
;

22 *
xb1
,*
xb2
;

24 
xb1
=
	`ve˘‹
(1,
NBMAX
);

25 
xb2
=
	`ve˘‹
(1,
NBMAX
);

26 
	`zbøk
(
fx
,
X1
,
X2
,
N
,
xb1
,
xb2
,&
nb
);

27 
	`¥ötf
("\nbrackets forÑoots of bessj0:\n");

28 
	`¥ötf
("%21s %10s %16s %10s\n","lower","upper","f(lower)","f(upper)");

29 
i
=1;i<=
nb
;i++)

30 
	`¥ötf
("%s %2d %10.4f %10.4f %3s %10.4f %10.4f\n",

31 "ÑoŸ ",
i
,
xb1
[i],
xb2
[i]," ",

32 
	`fx
(
xb1
[
i
]),fx(
xb2
[i]));

33 
	`‰ì_ve˘‹
(
xb2
,1,
NBMAX
);

34 
	`‰ì_ve˘‹
(
xb1
,1,
NBMAX
);

36 
	}
}

37 #unde‡
NRANSI


	@zbrak.c

2 
	$zbøk
((*
fx
)(), 
x1
, 
x2
, 
n
, 
xb1
[],

3 
xb2
[], *
nb
)

5 
nbb
,
i
;

6 
x
,
Â
,
fc
,
dx
;

8 
nbb
=0;

9 
dx
=(
x2
-
x1
)/
n
;

10 
Â
=(*
fx
)(
x
=
x1
);

11 
i
=1;i<=
n
;i++) {

12 
fc
=(*
fx
)(
x
 +
dx
);

13 i‡(
fc
*
Â
 <= 0.0) {

14 
xb1
[++
nbb
]=
x
-
dx
;

15 
xb2
[
nbb
]=
x
;

16 if(*
nb
 =
nbb
) ;

19 
Â
=
fc
;

21 *
nb
 = 
nbb
;

22 
	}
}

	@
1
.
0
20
173
bessj0.c
bessj1.c
hw3.c
nr.h
nrutil.c
nrutil.h
rtbis.c
rtflsp.c
rtmuller.c
rtnewt.c
rtsafe.c
rtsec.c
test.c
xrtbis.c
xrtflsp.c
xrtnewt.c
xrtsafe.c
xrtsec.c
xzbrak.c
zbrak.c
